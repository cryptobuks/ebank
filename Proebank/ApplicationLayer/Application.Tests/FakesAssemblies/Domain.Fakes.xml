<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Domain.Fakes</name>
    </assembly>
    <members>
        <member name="T:Domain.Fakes.ShimDataContext">
            <summary>Shim type of Domain.DataContext</summary>
        </member>
        <member name="M:Domain.Fakes.ShimDataContext.#ctor(Domain.DataContext)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Domain.Fakes.ShimDataContext.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Domain.Fakes.ShimDataContext.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Domain.Fakes.ShimDataContext.Bind(System.Data.Entity.Infrastructure.IObjectContextAdapter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Domain.Fakes.ShimDataContext.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Domain.Fakes.ShimDataContext.AccountsGet">
            <summary>Sets the shim of DataContext.get_Accounts()</summary>
        </member>
        <member name="P:Domain.Fakes.ShimDataContext.AccountsSetDbSetOfAccount">
            <summary>Sets the shim of DataContext.set_Accounts(DbSet`1&lt;Account&gt; value)</summary>
        </member>
        <member name="P:Domain.Fakes.ShimDataContext.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Domain.Fakes.ShimDataContext.CalendarsGet">
            <summary>Sets the shim of DataContext.get_Calendars()</summary>
        </member>
        <member name="P:Domain.Fakes.ShimDataContext.CalendarsSetDbSetOfCalendar">
            <summary>Sets the shim of DataContext.set_Calendars(DbSet`1&lt;Calendar&gt; value)</summary>
        </member>
        <member name="P:Domain.Fakes.ShimDataContext.Constructor">
            <summary>Sets the shim of DataContext.DataContext()</summary>
        </member>
        <member name="P:Domain.Fakes.ShimDataContext.LoanApplicationsGet">
            <summary>Sets the shim of DataContext.get_LoanApplications()</summary>
        </member>
        <member name="P:Domain.Fakes.ShimDataContext.LoanApplicationsSetDbSetOfLoanApplication">
            <summary>Sets the shim of DataContext.set_LoanApplications(DbSet`1&lt;LoanApplication&gt; value)</summary>
        </member>
        <member name="P:Domain.Fakes.ShimDataContext.LoansGet">
            <summary>Sets the shim of DataContext.get_Loans()</summary>
        </member>
        <member name="P:Domain.Fakes.ShimDataContext.LoansSetDbSetOfLoan">
            <summary>Sets the shim of DataContext.set_Loans(DbSet`1&lt;Loan&gt; value)</summary>
        </member>
        <member name="P:Domain.Fakes.ShimDataContext.OnModelCreatingDbModelBuilder">
            <summary>Sets the shim of DataContext.OnModelCreating(DbModelBuilder modelBuilder)</summary>
        </member>
        <member name="P:Domain.Fakes.ShimDataContext.SaveChanges">
            <summary>Sets the shim of DataContext.SaveChanges()</summary>
        </member>
        <member name="P:Domain.Fakes.ShimDataContext.TariffsGet">
            <summary>Sets the shim of DataContext.get_Tariffs()</summary>
        </member>
        <member name="P:Domain.Fakes.ShimDataContext.TariffsSetDbSetOfTariff">
            <summary>Sets the shim of DataContext.set_Tariffs(DbSet`1&lt;Tariff&gt; value)</summary>
        </member>
        <member name="P:Domain.Fakes.ShimDataContext._SaveChangesb__0DbEntityValidationResult">
            <summary>Sets the shim of DataContext.&lt;SaveChanges&gt;b__0(DbEntityValidationResult validationErrors)</summary>
        </member>
        <member name="T:Domain.Fakes.ShimDataContext.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Domain.Fakes.ShimDataContext.AllInstances.AccountsGet">
            <summary>Sets the shim of DataContext.get_Accounts()</summary>
        </member>
        <member name="P:Domain.Fakes.ShimDataContext.AllInstances.AccountsSetDbSetOfAccount">
            <summary>Sets the shim of DataContext.set_Accounts(DbSet`1&lt;Account&gt; value)</summary>
        </member>
        <member name="P:Domain.Fakes.ShimDataContext.AllInstances.CalendarsGet">
            <summary>Sets the shim of DataContext.get_Calendars()</summary>
        </member>
        <member name="P:Domain.Fakes.ShimDataContext.AllInstances.CalendarsSetDbSetOfCalendar">
            <summary>Sets the shim of DataContext.set_Calendars(DbSet`1&lt;Calendar&gt; value)</summary>
        </member>
        <member name="P:Domain.Fakes.ShimDataContext.AllInstances.LoanApplicationsGet">
            <summary>Sets the shim of DataContext.get_LoanApplications()</summary>
        </member>
        <member name="P:Domain.Fakes.ShimDataContext.AllInstances.LoanApplicationsSetDbSetOfLoanApplication">
            <summary>Sets the shim of DataContext.set_LoanApplications(DbSet`1&lt;LoanApplication&gt; value)</summary>
        </member>
        <member name="P:Domain.Fakes.ShimDataContext.AllInstances.LoansGet">
            <summary>Sets the shim of DataContext.get_Loans()</summary>
        </member>
        <member name="P:Domain.Fakes.ShimDataContext.AllInstances.LoansSetDbSetOfLoan">
            <summary>Sets the shim of DataContext.set_Loans(DbSet`1&lt;Loan&gt; value)</summary>
        </member>
        <member name="P:Domain.Fakes.ShimDataContext.AllInstances.OnModelCreatingDbModelBuilder">
            <summary>Sets the shim of DataContext.OnModelCreating(DbModelBuilder modelBuilder)</summary>
        </member>
        <member name="P:Domain.Fakes.ShimDataContext.AllInstances.SaveChanges">
            <summary>Sets the shim of DataContext.SaveChanges()</summary>
        </member>
        <member name="P:Domain.Fakes.ShimDataContext.AllInstances.TariffsGet">
            <summary>Sets the shim of DataContext.get_Tariffs()</summary>
        </member>
        <member name="P:Domain.Fakes.ShimDataContext.AllInstances.TariffsSetDbSetOfTariff">
            <summary>Sets the shim of DataContext.set_Tariffs(DbSet`1&lt;Tariff&gt; value)</summary>
        </member>
        <member name="T:Domain.Fakes.StubDataContext">
            <summary>Stub type of Domain.DataContext</summary>
        </member>
        <member name="M:Domain.Fakes.StubDataContext.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Domain.Fakes.StubDataContext.AttachBackingFieldToRoles">
            <summary>Attaches delegates to emulate StubDataContext.Roles as a property with a backing field.</summary>
        </member>
        <member name="M:Domain.Fakes.StubDataContext.AttachBackingFieldToUsers">
            <summary>Attaches delegates to emulate StubDataContext.Users as a property with a backing field.</summary>
        </member>
        <member name="M:Domain.Fakes.StubDataContext.Dispose(System.Boolean)">
            <summary>Sets the stub of DbContext.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Domain.Fakes.StubDataContext.DisposeBoolean">
            <summary>Sets the stub of DbContext.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Domain.Fakes.StubDataContext.Equals(System.Object)">
            <summary>Sets the stub of DbContext.Equals(Object obj)</summary>
        </member>
        <member name="F:Domain.Fakes.StubDataContext.EqualsObject">
            <summary>Sets the stub of DbContext.Equals(Object obj)</summary>
        </member>
        <member name="M:Domain.Fakes.StubDataContext.GetHashCode">
            <summary>Sets the stub of DbContext.GetHashCode()</summary>
        </member>
        <member name="F:Domain.Fakes.StubDataContext.GetHashCode01">
            <summary>Sets the stub of DbContext.GetHashCode()</summary>
        </member>
        <member name="M:Domain.Fakes.StubDataContext.InitializeStub">
            <summary>Initializes a new instance of type StubDataContext</summary>
        </member>
        <member name="M:Domain.Fakes.StubDataContext.OnModelCreating(System.Data.Entity.DbModelBuilder)">
            <summary>Sets the stub of DataContext.OnModelCreating(DbModelBuilder modelBuilder)</summary>
        </member>
        <member name="F:Domain.Fakes.StubDataContext.OnModelCreatingDbModelBuilder">
            <summary>Sets the stub of DataContext.OnModelCreating(DbModelBuilder modelBuilder)</summary>
        </member>
        <member name="F:Domain.Fakes.StubDataContext.RolesGet">
            <summary>Sets the stub of IdentityDbContext`1.get_Roles()</summary>
        </member>
        <member name="F:Domain.Fakes.StubDataContext.RolesSetIDbSetOfIdentityRole">
            <summary>Sets the stub of IdentityDbContext`1.set_Roles(IDbSet`1&lt;IdentityRole&gt; value)</summary>
        </member>
        <member name="M:Domain.Fakes.StubDataContext.SaveChanges">
            <summary>Sets the stub of DataContext.SaveChanges()</summary>
        </member>
        <member name="F:Domain.Fakes.StubDataContext.SaveChanges01">
            <summary>Sets the stub of DataContext.SaveChanges()</summary>
        </member>
        <member name="M:Domain.Fakes.StubDataContext.SaveChangesAsync">
            <summary>Sets the stub of DbContext.SaveChangesAsync()</summary>
        </member>
        <member name="M:Domain.Fakes.StubDataContext.SaveChangesAsync(System.Threading.CancellationToken)">
            <summary>Sets the stub of DbContext.SaveChangesAsync(CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Domain.Fakes.StubDataContext.SaveChangesAsync01">
            <summary>Sets the stub of DbContext.SaveChangesAsync()</summary>
        </member>
        <member name="F:Domain.Fakes.StubDataContext.SaveChangesAsyncCancellationToken">
            <summary>Sets the stub of DbContext.SaveChangesAsync(CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Domain.Fakes.StubDataContext.ShouldValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry)">
            <summary>Sets the stub of DbContext.ShouldValidateEntity(DbEntityEntry entityEntry)</summary>
        </member>
        <member name="F:Domain.Fakes.StubDataContext.ShouldValidateEntityDbEntityEntry">
            <summary>Sets the stub of DbContext.ShouldValidateEntity(DbEntityEntry entityEntry)</summary>
        </member>
        <member name="M:Domain.Fakes.StubDataContext.ToString">
            <summary>Sets the stub of DbContext.ToString()</summary>
        </member>
        <member name="F:Domain.Fakes.StubDataContext.ToString01">
            <summary>Sets the stub of DbContext.ToString()</summary>
        </member>
        <member name="F:Domain.Fakes.StubDataContext.UsersGet">
            <summary>Sets the stub of IdentityDbContext`1.get_Users()</summary>
        </member>
        <member name="F:Domain.Fakes.StubDataContext.UsersSetIDbSetOfEmployee">
            <summary>Sets the stub of IdentityDbContext`1.set_Users(IDbSet`1&lt;!0&gt; value)</summary>
        </member>
        <member name="M:Domain.Fakes.StubDataContext.ValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry,System.Collections.Generic.IDictionary{System.Object,System.Object})">
            <summary>Sets the stub of IdentityDbContext`1.ValidateEntity(DbEntityEntry entityEntry, IDictionary`2&lt;Object,Object&gt; items)</summary>
        </member>
        <member name="F:Domain.Fakes.StubDataContext.ValidateEntityDbEntityEntryIDictionaryOfObjectObject">
            <summary>Sets the stub of IdentityDbContext`1.ValidateEntity(DbEntityEntry entityEntry, IDictionary`2&lt;Object,Object&gt; items)</summary>
        </member>
        <member name="P:Domain.Fakes.StubDataContext.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Domain.Fakes.StubDataContext.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Domain.Fakes.StubDataContext.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Domain.Fakes.StubDataContext.Roles">
            <summary>Sets the stub of IdentityDbContext`1.get_Roles()</summary>
        </member>
        <member name="P:Domain.Fakes.StubDataContext.Users">
            <summary>Sets the stub of IdentityDbContext`1.get_Users()</summary>
        </member>
        <member name="T:Domain.Fakes.StubIRepository`2">
            <summary>Stub type of Domain.IRepository`2</summary>
        </member>
        <member name="M:Domain.Fakes.StubIRepository`2.#ctor">
            <summary>Initializes a new instance of type StubIRepository</summary>
        </member>
        <member name="F:Domain.Fakes.StubIRepository`2.DeleteT0">
            <summary>Sets the stub of IRepository`2.Delete(!0 entity)</summary>
        </member>
        <member name="M:Domain.Fakes.StubIRepository`2.d::Domain#IRepository{T@TId}#Delete(`0)">
            <summary>Sets the stub of IRepository`2.Delete(!0 entity)</summary>
        </member>
        <member name="M:Domain.Fakes.StubIRepository`2.d::Domain#IRepository{T@TId}#Get(System.Func{`0,System.Boolean})">
            <summary>Sets the stub of IRepository`2.Get(Func`2&lt;!0,Boolean&gt; filter)</summary>
        </member>
        <member name="M:Domain.Fakes.StubIRepository`2.d::Domain#IRepository{T@TId}#GetAll">
            <summary>Sets the stub of IRepository`2.GetAll()</summary>
        </member>
        <member name="M:Domain.Fakes.StubIRepository`2.d::Domain#IRepository{T@TId}#GetAll(System.Func{`0,System.Boolean})">
            <summary>Sets the stub of IRepository`2.GetAll(Func`2&lt;!0,Boolean&gt; filter)</summary>
        </member>
        <member name="M:Domain.Fakes.StubIRepository`2.d::Domain#IRepository{T@TId}#Upsert(`0[])">
            <summary>Sets the stub of IRepository`2.Upsert(!0[] entities)</summary>
        </member>
        <member name="F:Domain.Fakes.StubIRepository`2.GetAll">
            <summary>Sets the stub of IRepository`2.GetAll()</summary>
        </member>
        <member name="F:Domain.Fakes.StubIRepository`2.GetAllFuncOfT0Boolean">
            <summary>Sets the stub of IRepository`2.GetAll(Func`2&lt;!0,Boolean&gt; filter)</summary>
        </member>
        <member name="F:Domain.Fakes.StubIRepository`2.GetFuncOfT0Boolean">
            <summary>Sets the stub of IRepository`2.Get(Func`2&lt;!0,Boolean&gt; filter)</summary>
        </member>
        <member name="F:Domain.Fakes.StubIRepository`2.UpsertT0Array">
            <summary>Sets the stub of IRepository`2.Upsert(!0[] entities)</summary>
        </member>
        <member name="T:Domain.Models.Accounts.Fakes.ShimAccount">
            <summary>Shim type of Domain.Models.Accounts.Account</summary>
        </member>
        <member name="M:Domain.Models.Accounts.Fakes.ShimAccount.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Domain.Models.Accounts.Fakes.ShimAccount.#ctor(Domain.Models.Accounts.Account)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Domain.Models.Accounts.Fakes.ShimAccount.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Domain.Models.Accounts.Fakes.ShimAccount.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Domain.Models.Accounts.Fakes.ShimAccount.BalanceGet">
            <summary>Sets the shim of Account.get_Balance()</summary>
        </member>
        <member name="P:Domain.Models.Accounts.Fakes.ShimAccount.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Domain.Models.Accounts.Fakes.ShimAccount.Constructor">
            <summary>Sets the shim of Account.Account()</summary>
        </member>
        <member name="P:Domain.Models.Accounts.Fakes.ShimAccount.CurrencyGet">
            <summary>Sets the shim of Account.get_Currency()</summary>
        </member>
        <member name="P:Domain.Models.Accounts.Fakes.ShimAccount.CurrencySetCurrency">
            <summary>Sets the shim of Account.set_Currency(Currency value)</summary>
        </member>
        <member name="P:Domain.Models.Accounts.Fakes.ShimAccount.DateClosedGet">
            <summary>Sets the shim of Account.get_DateClosed()</summary>
        </member>
        <member name="P:Domain.Models.Accounts.Fakes.ShimAccount.DateClosedSetNullableOfDateTime">
            <summary>Sets the shim of Account.set_DateClosed(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Domain.Models.Accounts.Fakes.ShimAccount.DateOpenedGet">
            <summary>Sets the shim of Account.get_DateOpened()</summary>
        </member>
        <member name="P:Domain.Models.Accounts.Fakes.ShimAccount.DateOpenedSetDateTime">
            <summary>Sets the shim of Account.set_DateOpened(DateTime value)</summary>
        </member>
        <member name="P:Domain.Models.Accounts.Fakes.ShimAccount.EntriesGet">
            <summary>Sets the shim of Account.get_Entries()</summary>
        </member>
        <member name="P:Domain.Models.Accounts.Fakes.ShimAccount.EntriesSetICollectionOfEntry">
            <summary>Sets the shim of Account.set_Entries(ICollection`1&lt;Entry&gt; value)</summary>
        </member>
        <member name="P:Domain.Models.Accounts.Fakes.ShimAccount.IdGet">
            <summary>Sets the shim of Account.get_Id()</summary>
        </member>
        <member name="P:Domain.Models.Accounts.Fakes.ShimAccount.IdSetGuid">
            <summary>Sets the shim of Account.set_Id(Guid value)</summary>
        </member>
        <member name="P:Domain.Models.Accounts.Fakes.ShimAccount.IsClosedGet">
            <summary>Sets the shim of Account.get_IsClosed()</summary>
        </member>
        <member name="P:Domain.Models.Accounts.Fakes.ShimAccount.IsClosedSetBoolean">
            <summary>Sets the shim of Account.set_IsClosed(Boolean value)</summary>
        </member>
        <member name="P:Domain.Models.Accounts.Fakes.ShimAccount.NumberGet">
            <summary>Sets the shim of Account.get_Number()</summary>
        </member>
        <member name="P:Domain.Models.Accounts.Fakes.ShimAccount.NumberSetInt32">
            <summary>Sets the shim of Account.set_Number(Int32 value)</summary>
        </member>
        <member name="P:Domain.Models.Accounts.Fakes.ShimAccount.NumberTextGet">
            <summary>Sets the shim of Account.get_NumberText()</summary>
        </member>
        <member name="P:Domain.Models.Accounts.Fakes.ShimAccount.SameIdentityAsAccount">
            <summary>Sets the shim of Account.SameIdentityAs(Account other)</summary>
        </member>
        <member name="P:Domain.Models.Accounts.Fakes.ShimAccount.TypeGet">
            <summary>Sets the shim of Account.get_Type()</summary>
        </member>
        <member name="P:Domain.Models.Accounts.Fakes.ShimAccount.TypeSetAccountType">
            <summary>Sets the shim of Account.set_Type(AccountType value)</summary>
        </member>
        <member name="P:Domain.Models.Accounts.Fakes.ShimAccount._get_Balanceb__0Entry">
            <summary>Sets the shim of Account.&lt;get_Balance&gt;b__0(Entry e)</summary>
        </member>
        <member name="T:Domain.Models.Accounts.Fakes.ShimAccount.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Domain.Models.Accounts.Fakes.ShimAccount.AllInstances.BalanceGet">
            <summary>Sets the shim of Account.get_Balance()</summary>
        </member>
        <member name="P:Domain.Models.Accounts.Fakes.ShimAccount.AllInstances.CurrencyGet">
            <summary>Sets the shim of Account.get_Currency()</summary>
        </member>
        <member name="P:Domain.Models.Accounts.Fakes.ShimAccount.AllInstances.CurrencySetCurrency">
            <summary>Sets the shim of Account.set_Currency(Currency value)</summary>
        </member>
        <member name="P:Domain.Models.Accounts.Fakes.ShimAccount.AllInstances.DateClosedGet">
            <summary>Sets the shim of Account.get_DateClosed()</summary>
        </member>
        <member name="P:Domain.Models.Accounts.Fakes.ShimAccount.AllInstances.DateClosedSetNullableOfDateTime">
            <summary>Sets the shim of Account.set_DateClosed(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Domain.Models.Accounts.Fakes.ShimAccount.AllInstances.DateOpenedGet">
            <summary>Sets the shim of Account.get_DateOpened()</summary>
        </member>
        <member name="P:Domain.Models.Accounts.Fakes.ShimAccount.AllInstances.DateOpenedSetDateTime">
            <summary>Sets the shim of Account.set_DateOpened(DateTime value)</summary>
        </member>
        <member name="P:Domain.Models.Accounts.Fakes.ShimAccount.AllInstances.EntriesGet">
            <summary>Sets the shim of Account.get_Entries()</summary>
        </member>
        <member name="P:Domain.Models.Accounts.Fakes.ShimAccount.AllInstances.EntriesSetICollectionOfEntry">
            <summary>Sets the shim of Account.set_Entries(ICollection`1&lt;Entry&gt; value)</summary>
        </member>
        <member name="P:Domain.Models.Accounts.Fakes.ShimAccount.AllInstances.IdGet">
            <summary>Sets the shim of Account.get_Id()</summary>
        </member>
        <member name="P:Domain.Models.Accounts.Fakes.ShimAccount.AllInstances.IdSetGuid">
            <summary>Sets the shim of Account.set_Id(Guid value)</summary>
        </member>
        <member name="P:Domain.Models.Accounts.Fakes.ShimAccount.AllInstances.IsClosedGet">
            <summary>Sets the shim of Account.get_IsClosed()</summary>
        </member>
        <member name="P:Domain.Models.Accounts.Fakes.ShimAccount.AllInstances.IsClosedSetBoolean">
            <summary>Sets the shim of Account.set_IsClosed(Boolean value)</summary>
        </member>
        <member name="P:Domain.Models.Accounts.Fakes.ShimAccount.AllInstances.NumberGet">
            <summary>Sets the shim of Account.get_Number()</summary>
        </member>
        <member name="P:Domain.Models.Accounts.Fakes.ShimAccount.AllInstances.NumberSetInt32">
            <summary>Sets the shim of Account.set_Number(Int32 value)</summary>
        </member>
        <member name="P:Domain.Models.Accounts.Fakes.ShimAccount.AllInstances.NumberTextGet">
            <summary>Sets the shim of Account.get_NumberText()</summary>
        </member>
        <member name="P:Domain.Models.Accounts.Fakes.ShimAccount.AllInstances.SameIdentityAsAccount">
            <summary>Sets the shim of Account.SameIdentityAs(Account other)</summary>
        </member>
        <member name="P:Domain.Models.Accounts.Fakes.ShimAccount.AllInstances.TypeGet">
            <summary>Sets the shim of Account.get_Type()</summary>
        </member>
        <member name="P:Domain.Models.Accounts.Fakes.ShimAccount.AllInstances.TypeSetAccountType">
            <summary>Sets the shim of Account.set_Type(AccountType value)</summary>
        </member>
        <member name="T:Domain.Models.Accounts.Fakes.ShimEntry">
            <summary>Shim type of Domain.Models.Accounts.Entry</summary>
        </member>
        <member name="M:Domain.Models.Accounts.Fakes.ShimEntry.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Domain.Models.Accounts.Fakes.ShimEntry.#ctor(Domain.Models.Accounts.Entry)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Domain.Models.Accounts.Fakes.ShimEntry.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Domain.Models.Accounts.Fakes.ShimEntry.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Domain.Models.Accounts.Fakes.ShimEntry.AmountGet">
            <summary>Sets the shim of Entry.get_Amount()</summary>
        </member>
        <member name="P:Domain.Models.Accounts.Fakes.ShimEntry.AmountSetDecimal">
            <summary>Sets the shim of Entry.set_Amount(Decimal value)</summary>
        </member>
        <member name="P:Domain.Models.Accounts.Fakes.ShimEntry.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Domain.Models.Accounts.Fakes.ShimEntry.Constructor">
            <summary>Sets the shim of Entry.Entry()</summary>
        </member>
        <member name="P:Domain.Models.Accounts.Fakes.ShimEntry.CurrencyGet">
            <summary>Sets the shim of Entry.get_Currency()</summary>
        </member>
        <member name="P:Domain.Models.Accounts.Fakes.ShimEntry.CurrencySetCurrency">
            <summary>Sets the shim of Entry.set_Currency(Currency value)</summary>
        </member>
        <member name="P:Domain.Models.Accounts.Fakes.ShimEntry.DateGet">
            <summary>Sets the shim of Entry.get_Date()</summary>
        </member>
        <member name="P:Domain.Models.Accounts.Fakes.ShimEntry.DateSetDateTime">
            <summary>Sets the shim of Entry.set_Date(DateTime value)</summary>
        </member>
        <member name="P:Domain.Models.Accounts.Fakes.ShimEntry.GetOppositeForEntry">
            <summary>Sets the shim of Entry.GetOppositeFor(Entry entry)</summary>
        </member>
        <member name="P:Domain.Models.Accounts.Fakes.ShimEntry.IdGet">
            <summary>Sets the shim of Entry.get_Id()</summary>
        </member>
        <member name="P:Domain.Models.Accounts.Fakes.ShimEntry.IdSetGuid">
            <summary>Sets the shim of Entry.set_Id(Guid value)</summary>
        </member>
        <member name="P:Domain.Models.Accounts.Fakes.ShimEntry.SameIdentityAsEntry">
            <summary>Sets the shim of Entry.SameIdentityAs(Entry other)</summary>
        </member>
        <member name="P:Domain.Models.Accounts.Fakes.ShimEntry.SubTypeGet">
            <summary>Sets the shim of Entry.get_SubType()</summary>
        </member>
        <member name="P:Domain.Models.Accounts.Fakes.ShimEntry.SubTypeSetEntrySubType">
            <summary>Sets the shim of Entry.set_SubType(EntrySubType value)</summary>
        </member>
        <member name="P:Domain.Models.Accounts.Fakes.ShimEntry.TypeGet">
            <summary>Sets the shim of Entry.get_Type()</summary>
        </member>
        <member name="P:Domain.Models.Accounts.Fakes.ShimEntry.TypeSetEntryType">
            <summary>Sets the shim of Entry.set_Type(EntryType value)</summary>
        </member>
        <member name="T:Domain.Models.Accounts.Fakes.ShimEntry.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Domain.Models.Accounts.Fakes.ShimEntry.AllInstances.AmountGet">
            <summary>Sets the shim of Entry.get_Amount()</summary>
        </member>
        <member name="P:Domain.Models.Accounts.Fakes.ShimEntry.AllInstances.AmountSetDecimal">
            <summary>Sets the shim of Entry.set_Amount(Decimal value)</summary>
        </member>
        <member name="P:Domain.Models.Accounts.Fakes.ShimEntry.AllInstances.CurrencyGet">
            <summary>Sets the shim of Entry.get_Currency()</summary>
        </member>
        <member name="P:Domain.Models.Accounts.Fakes.ShimEntry.AllInstances.CurrencySetCurrency">
            <summary>Sets the shim of Entry.set_Currency(Currency value)</summary>
        </member>
        <member name="P:Domain.Models.Accounts.Fakes.ShimEntry.AllInstances.DateGet">
            <summary>Sets the shim of Entry.get_Date()</summary>
        </member>
        <member name="P:Domain.Models.Accounts.Fakes.ShimEntry.AllInstances.DateSetDateTime">
            <summary>Sets the shim of Entry.set_Date(DateTime value)</summary>
        </member>
        <member name="P:Domain.Models.Accounts.Fakes.ShimEntry.AllInstances.IdGet">
            <summary>Sets the shim of Entry.get_Id()</summary>
        </member>
        <member name="P:Domain.Models.Accounts.Fakes.ShimEntry.AllInstances.IdSetGuid">
            <summary>Sets the shim of Entry.set_Id(Guid value)</summary>
        </member>
        <member name="P:Domain.Models.Accounts.Fakes.ShimEntry.AllInstances.SameIdentityAsEntry">
            <summary>Sets the shim of Entry.SameIdentityAs(Entry other)</summary>
        </member>
        <member name="P:Domain.Models.Accounts.Fakes.ShimEntry.AllInstances.SubTypeGet">
            <summary>Sets the shim of Entry.get_SubType()</summary>
        </member>
        <member name="P:Domain.Models.Accounts.Fakes.ShimEntry.AllInstances.SubTypeSetEntrySubType">
            <summary>Sets the shim of Entry.set_SubType(EntrySubType value)</summary>
        </member>
        <member name="P:Domain.Models.Accounts.Fakes.ShimEntry.AllInstances.TypeGet">
            <summary>Sets the shim of Entry.get_Type()</summary>
        </member>
        <member name="P:Domain.Models.Accounts.Fakes.ShimEntry.AllInstances.TypeSetEntryType">
            <summary>Sets the shim of Entry.set_Type(EntryType value)</summary>
        </member>
        <member name="T:Domain.Models.Accounts.Fakes.StubAccount">
            <summary>Stub type of Domain.Models.Accounts.Account</summary>
        </member>
        <member name="M:Domain.Models.Accounts.Fakes.StubAccount.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Domain.Models.Accounts.Fakes.StubAccount.AttachBackingFieldToEntries">
            <summary>Attaches delegates to emulate StubAccount.Entries as a property with a backing field.</summary>
        </member>
        <member name="F:Domain.Models.Accounts.Fakes.StubAccount.EntriesGet">
            <summary>Sets the stub of Account.get_Entries()</summary>
        </member>
        <member name="F:Domain.Models.Accounts.Fakes.StubAccount.EntriesSetICollectionOfEntry">
            <summary>Sets the stub of Account.set_Entries(ICollection`1&lt;Entry&gt; value)</summary>
        </member>
        <member name="M:Domain.Models.Accounts.Fakes.StubAccount.InitializeStub">
            <summary>Initializes a new instance of type StubAccount</summary>
        </member>
        <member name="P:Domain.Models.Accounts.Fakes.StubAccount.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Domain.Models.Accounts.Fakes.StubAccount.Entries">
            <summary>Sets the stub of Account.get_Entries()</summary>
        </member>
        <member name="P:Domain.Models.Accounts.Fakes.StubAccount.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Domain.Models.Accounts.Fakes.StubAccount.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Domain.Models.Accounts.Fakes.StubEntry">
            <summary>Stub type of Domain.Models.Accounts.Entry</summary>
        </member>
        <member name="M:Domain.Models.Accounts.Fakes.StubEntry.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Domain.Models.Accounts.Fakes.StubEntry.InitializeStub">
            <summary>Initializes a new instance of type StubEntry</summary>
        </member>
        <member name="P:Domain.Models.Accounts.Fakes.StubEntry.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Domain.Models.Accounts.Fakes.StubEntry.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Domain.Models.Accounts.Fakes.StubEntry.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Domain.Models.Accounts.Fakes.StubIAccountRepository">
            <summary>Stub type of Domain.Models.Accounts.IAccountRepository</summary>
        </member>
        <member name="M:Domain.Models.Accounts.Fakes.StubIAccountRepository.#ctor">
            <summary>Initializes a new instance of type StubIAccountRepository</summary>
        </member>
        <member name="F:Domain.Models.Accounts.Fakes.StubIAccountRepository.DeleteAccount">
            <summary>Sets the stub of IRepository`2.Delete(!0 entity)</summary>
        </member>
        <member name="M:Domain.Models.Accounts.Fakes.StubIAccountRepository.d::Domain#IRepository{Domain#Models#Accounts#Account@System#Guid}#Delete(Domain.Models.Accounts.Account)">
            <summary>Sets the stub of IRepository`2.Delete(!0 entity)</summary>
        </member>
        <member name="M:Domain.Models.Accounts.Fakes.StubIAccountRepository.d::Domain#IRepository{Domain#Models#Accounts#Account@System#Guid}#Get(System.Func{Domain.Models.Accounts.Account,System.Boolean})">
            <summary>Sets the stub of IRepository`2.Get(Func`2&lt;!0,Boolean&gt; filter)</summary>
        </member>
        <member name="M:Domain.Models.Accounts.Fakes.StubIAccountRepository.d::Domain#IRepository{Domain#Models#Accounts#Account@System#Guid}#GetAll">
            <summary>Sets the stub of IRepository`2.GetAll()</summary>
        </member>
        <member name="M:Domain.Models.Accounts.Fakes.StubIAccountRepository.d::Domain#IRepository{Domain#Models#Accounts#Account@System#Guid}#GetAll(System.Func{Domain.Models.Accounts.Account,System.Boolean})">
            <summary>Sets the stub of IRepository`2.GetAll(Func`2&lt;!0,Boolean&gt; filter)</summary>
        </member>
        <member name="M:Domain.Models.Accounts.Fakes.StubIAccountRepository.d::Domain#IRepository{Domain#Models#Accounts#Account@System#Guid}#Upsert(Domain.Models.Accounts.Account[])">
            <summary>Sets the stub of IRepository`2.Upsert(!0[] entities)</summary>
        </member>
        <member name="F:Domain.Models.Accounts.Fakes.StubIAccountRepository.GetAll">
            <summary>Sets the stub of IRepository`2.GetAll()</summary>
        </member>
        <member name="F:Domain.Models.Accounts.Fakes.StubIAccountRepository.GetAllFuncOfAccountBoolean">
            <summary>Sets the stub of IRepository`2.GetAll(Func`2&lt;!0,Boolean&gt; filter)</summary>
        </member>
        <member name="F:Domain.Models.Accounts.Fakes.StubIAccountRepository.GetFuncOfAccountBoolean">
            <summary>Sets the stub of IRepository`2.Get(Func`2&lt;!0,Boolean&gt; filter)</summary>
        </member>
        <member name="F:Domain.Models.Accounts.Fakes.StubIAccountRepository.UpsertAccountArray">
            <summary>Sets the stub of IRepository`2.Upsert(!0[] entities)</summary>
        </member>
        <member name="T:Domain.Models.Calendars.Fakes.ShimCalendar">
            <summary>Shim type of Domain.Models.Calendars.Calendar</summary>
        </member>
        <member name="M:Domain.Models.Calendars.Fakes.ShimCalendar.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Domain.Models.Calendars.Fakes.ShimCalendar.#ctor(Domain.Models.Calendars.Calendar)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Domain.Models.Calendars.Fakes.ShimCalendar.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Domain.Models.Calendars.Fakes.ShimCalendar.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Domain.Models.Calendars.Fakes.ShimCalendar.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Domain.Models.Calendars.Fakes.ShimCalendar.ConstGuidGet">
            <summary>Sets the shim of Calendar.get_ConstGuid()</summary>
        </member>
        <member name="P:Domain.Models.Calendars.Fakes.ShimCalendar.Constructor">
            <summary>Sets the shim of Calendar.Calendar()</summary>
        </member>
        <member name="P:Domain.Models.Calendars.Fakes.ShimCalendar.CurrentTimeGet">
            <summary>Sets the shim of Calendar.get_CurrentTime()</summary>
        </member>
        <member name="P:Domain.Models.Calendars.Fakes.ShimCalendar.CurrentTimeSetNullableOfDateTime">
            <summary>Sets the shim of Calendar.set_CurrentTime(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Domain.Models.Calendars.Fakes.ShimCalendar.IdGet">
            <summary>Sets the shim of Calendar.get_Id()</summary>
        </member>
        <member name="P:Domain.Models.Calendars.Fakes.ShimCalendar.IdSetGuid">
            <summary>Sets the shim of Calendar.set_Id(Guid value)</summary>
        </member>
        <member name="P:Domain.Models.Calendars.Fakes.ShimCalendar.LastDailyProcessingTimeGet">
            <summary>Sets the shim of Calendar.get_LastDailyProcessingTime()</summary>
        </member>
        <member name="P:Domain.Models.Calendars.Fakes.ShimCalendar.LastDailyProcessingTimeSetNullableOfDateTime">
            <summary>Sets the shim of Calendar.set_LastDailyProcessingTime(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Domain.Models.Calendars.Fakes.ShimCalendar.LastMonthlyProcessingTimeGet">
            <summary>Sets the shim of Calendar.get_LastMonthlyProcessingTime()</summary>
        </member>
        <member name="P:Domain.Models.Calendars.Fakes.ShimCalendar.LastMonthlyProcessingTimeSetNullableOfDateTime">
            <summary>Sets the shim of Calendar.set_LastMonthlyProcessingTime(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Domain.Models.Calendars.Fakes.ShimCalendar.ProcessingLockGet">
            <summary>Sets the shim of Calendar.get_ProcessingLock()</summary>
        </member>
        <member name="P:Domain.Models.Calendars.Fakes.ShimCalendar.ProcessingLockSetBoolean">
            <summary>Sets the shim of Calendar.set_ProcessingLock(Boolean value)</summary>
        </member>
        <member name="T:Domain.Models.Calendars.Fakes.ShimCalendar.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Domain.Models.Calendars.Fakes.ShimCalendar.AllInstances.CurrentTimeGet">
            <summary>Sets the shim of Calendar.get_CurrentTime()</summary>
        </member>
        <member name="P:Domain.Models.Calendars.Fakes.ShimCalendar.AllInstances.CurrentTimeSetNullableOfDateTime">
            <summary>Sets the shim of Calendar.set_CurrentTime(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Domain.Models.Calendars.Fakes.ShimCalendar.AllInstances.IdGet">
            <summary>Sets the shim of Calendar.get_Id()</summary>
        </member>
        <member name="P:Domain.Models.Calendars.Fakes.ShimCalendar.AllInstances.IdSetGuid">
            <summary>Sets the shim of Calendar.set_Id(Guid value)</summary>
        </member>
        <member name="P:Domain.Models.Calendars.Fakes.ShimCalendar.AllInstances.LastDailyProcessingTimeGet">
            <summary>Sets the shim of Calendar.get_LastDailyProcessingTime()</summary>
        </member>
        <member name="P:Domain.Models.Calendars.Fakes.ShimCalendar.AllInstances.LastDailyProcessingTimeSetNullableOfDateTime">
            <summary>Sets the shim of Calendar.set_LastDailyProcessingTime(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Domain.Models.Calendars.Fakes.ShimCalendar.AllInstances.LastMonthlyProcessingTimeGet">
            <summary>Sets the shim of Calendar.get_LastMonthlyProcessingTime()</summary>
        </member>
        <member name="P:Domain.Models.Calendars.Fakes.ShimCalendar.AllInstances.LastMonthlyProcessingTimeSetNullableOfDateTime">
            <summary>Sets the shim of Calendar.set_LastMonthlyProcessingTime(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Domain.Models.Calendars.Fakes.ShimCalendar.AllInstances.ProcessingLockGet">
            <summary>Sets the shim of Calendar.get_ProcessingLock()</summary>
        </member>
        <member name="P:Domain.Models.Calendars.Fakes.ShimCalendar.AllInstances.ProcessingLockSetBoolean">
            <summary>Sets the shim of Calendar.set_ProcessingLock(Boolean value)</summary>
        </member>
        <member name="T:Domain.Models.Calendars.Fakes.StubCalendar">
            <summary>Stub type of Domain.Models.Calendars.Calendar</summary>
        </member>
        <member name="M:Domain.Models.Calendars.Fakes.StubCalendar.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Domain.Models.Calendars.Fakes.StubCalendar.InitializeStub">
            <summary>Initializes a new instance of type StubCalendar</summary>
        </member>
        <member name="P:Domain.Models.Calendars.Fakes.StubCalendar.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Domain.Models.Calendars.Fakes.StubCalendar.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Domain.Models.Calendars.Fakes.StubCalendar.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Domain.Models.Calendars.Fakes.StubICalendarRepository">
            <summary>Stub type of Domain.Models.Calendars.ICalendarRepository</summary>
        </member>
        <member name="M:Domain.Models.Calendars.Fakes.StubICalendarRepository.#ctor">
            <summary>Initializes a new instance of type StubICalendarRepository</summary>
        </member>
        <member name="F:Domain.Models.Calendars.Fakes.StubICalendarRepository.DeleteCalendar">
            <summary>Sets the stub of IRepository`2.Delete(!0 entity)</summary>
        </member>
        <member name="M:Domain.Models.Calendars.Fakes.StubICalendarRepository.d::Domain#IRepository{Domain#Models#Calendars#Calendar@System#Guid}#Delete(Domain.Models.Calendars.Calendar)">
            <summary>Sets the stub of IRepository`2.Delete(!0 entity)</summary>
        </member>
        <member name="M:Domain.Models.Calendars.Fakes.StubICalendarRepository.d::Domain#IRepository{Domain#Models#Calendars#Calendar@System#Guid}#Get(System.Func{Domain.Models.Calendars.Calendar,System.Boolean})">
            <summary>Sets the stub of IRepository`2.Get(Func`2&lt;!0,Boolean&gt; filter)</summary>
        </member>
        <member name="M:Domain.Models.Calendars.Fakes.StubICalendarRepository.d::Domain#IRepository{Domain#Models#Calendars#Calendar@System#Guid}#GetAll">
            <summary>Sets the stub of IRepository`2.GetAll()</summary>
        </member>
        <member name="M:Domain.Models.Calendars.Fakes.StubICalendarRepository.d::Domain#IRepository{Domain#Models#Calendars#Calendar@System#Guid}#GetAll(System.Func{Domain.Models.Calendars.Calendar,System.Boolean})">
            <summary>Sets the stub of IRepository`2.GetAll(Func`2&lt;!0,Boolean&gt; filter)</summary>
        </member>
        <member name="M:Domain.Models.Calendars.Fakes.StubICalendarRepository.d::Domain#IRepository{Domain#Models#Calendars#Calendar@System#Guid}#Upsert(Domain.Models.Calendars.Calendar[])">
            <summary>Sets the stub of IRepository`2.Upsert(!0[] entities)</summary>
        </member>
        <member name="F:Domain.Models.Calendars.Fakes.StubICalendarRepository.GetAll">
            <summary>Sets the stub of IRepository`2.GetAll()</summary>
        </member>
        <member name="F:Domain.Models.Calendars.Fakes.StubICalendarRepository.GetAllFuncOfCalendarBoolean">
            <summary>Sets the stub of IRepository`2.GetAll(Func`2&lt;!0,Boolean&gt; filter)</summary>
        </member>
        <member name="F:Domain.Models.Calendars.Fakes.StubICalendarRepository.GetFuncOfCalendarBoolean">
            <summary>Sets the stub of IRepository`2.Get(Func`2&lt;!0,Boolean&gt; filter)</summary>
        </member>
        <member name="F:Domain.Models.Calendars.Fakes.StubICalendarRepository.UpsertCalendarArray">
            <summary>Sets the stub of IRepository`2.Upsert(!0[] entities)</summary>
        </member>
        <member name="T:Domain.Models.Customers.Fakes.ShimCustomer">
            <summary>Shim type of Domain.Models.Customers.Customer</summary>
        </member>
        <member name="M:Domain.Models.Customers.Fakes.ShimCustomer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Domain.Models.Customers.Fakes.ShimCustomer.#ctor(Domain.Models.Customers.Customer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Domain.Models.Customers.Fakes.ShimCustomer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Domain.Models.Customers.Fakes.ShimCustomer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Domain.Models.Customers.Fakes.ShimCustomer.Bind(Microsoft.AspNet.Identity.IUser)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Domain.Models.Customers.Fakes.ShimCustomer.AddressGet">
            <summary>Sets the shim of Customer.get_Address()</summary>
        </member>
        <member name="P:Domain.Models.Customers.Fakes.ShimCustomer.AddressSetString">
            <summary>Sets the shim of Customer.set_Address(String value)</summary>
        </member>
        <member name="P:Domain.Models.Customers.Fakes.ShimCustomer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Domain.Models.Customers.Fakes.ShimCustomer.BirthDateGet">
            <summary>Sets the shim of Customer.get_BirthDate()</summary>
        </member>
        <member name="P:Domain.Models.Customers.Fakes.ShimCustomer.BirthDateSetDateTime">
            <summary>Sets the shim of Customer.set_BirthDate(DateTime value)</summary>
        </member>
        <member name="P:Domain.Models.Customers.Fakes.ShimCustomer.Constructor">
            <summary>Sets the shim of Customer.Customer()</summary>
        </member>
        <member name="P:Domain.Models.Customers.Fakes.ShimCustomer.EmailGet">
            <summary>Sets the shim of Customer.get_Email()</summary>
        </member>
        <member name="P:Domain.Models.Customers.Fakes.ShimCustomer.EmailSetString">
            <summary>Sets the shim of Customer.set_Email(String value)</summary>
        </member>
        <member name="P:Domain.Models.Customers.Fakes.ShimCustomer.FirstNameGet">
            <summary>Sets the shim of Customer.get_FirstName()</summary>
        </member>
        <member name="P:Domain.Models.Customers.Fakes.ShimCustomer.FirstNameSetString">
            <summary>Sets the shim of Customer.set_FirstName(String value)</summary>
        </member>
        <member name="P:Domain.Models.Customers.Fakes.ShimCustomer.IdentificationNumberGet">
            <summary>Sets the shim of Customer.get_IdentificationNumber()</summary>
        </member>
        <member name="P:Domain.Models.Customers.Fakes.ShimCustomer.IdentificationNumberSetString">
            <summary>Sets the shim of Customer.set_IdentificationNumber(String value)</summary>
        </member>
        <member name="P:Domain.Models.Customers.Fakes.ShimCustomer.LastNameGet">
            <summary>Sets the shim of Customer.get_LastName()</summary>
        </member>
        <member name="P:Domain.Models.Customers.Fakes.ShimCustomer.LastNameSetString">
            <summary>Sets the shim of Customer.set_LastName(String value)</summary>
        </member>
        <member name="P:Domain.Models.Customers.Fakes.ShimCustomer.MiddleNameGet">
            <summary>Sets the shim of Customer.get_MiddleName()</summary>
        </member>
        <member name="P:Domain.Models.Customers.Fakes.ShimCustomer.MiddleNameSetString">
            <summary>Sets the shim of Customer.set_MiddleName(String value)</summary>
        </member>
        <member name="P:Domain.Models.Customers.Fakes.ShimCustomer.PhoneGet">
            <summary>Sets the shim of Customer.get_Phone()</summary>
        </member>
        <member name="P:Domain.Models.Customers.Fakes.ShimCustomer.PhoneSetString">
            <summary>Sets the shim of Customer.set_Phone(String value)</summary>
        </member>
        <member name="T:Domain.Models.Customers.Fakes.ShimCustomer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Domain.Models.Customers.Fakes.ShimCustomer.AllInstances.AddressGet">
            <summary>Sets the shim of Customer.get_Address()</summary>
        </member>
        <member name="P:Domain.Models.Customers.Fakes.ShimCustomer.AllInstances.AddressSetString">
            <summary>Sets the shim of Customer.set_Address(String value)</summary>
        </member>
        <member name="P:Domain.Models.Customers.Fakes.ShimCustomer.AllInstances.BirthDateGet">
            <summary>Sets the shim of Customer.get_BirthDate()</summary>
        </member>
        <member name="P:Domain.Models.Customers.Fakes.ShimCustomer.AllInstances.BirthDateSetDateTime">
            <summary>Sets the shim of Customer.set_BirthDate(DateTime value)</summary>
        </member>
        <member name="P:Domain.Models.Customers.Fakes.ShimCustomer.AllInstances.EmailGet">
            <summary>Sets the shim of Customer.get_Email()</summary>
        </member>
        <member name="P:Domain.Models.Customers.Fakes.ShimCustomer.AllInstances.EmailSetString">
            <summary>Sets the shim of Customer.set_Email(String value)</summary>
        </member>
        <member name="P:Domain.Models.Customers.Fakes.ShimCustomer.AllInstances.FirstNameGet">
            <summary>Sets the shim of Customer.get_FirstName()</summary>
        </member>
        <member name="P:Domain.Models.Customers.Fakes.ShimCustomer.AllInstances.FirstNameSetString">
            <summary>Sets the shim of Customer.set_FirstName(String value)</summary>
        </member>
        <member name="P:Domain.Models.Customers.Fakes.ShimCustomer.AllInstances.IdentificationNumberGet">
            <summary>Sets the shim of Customer.get_IdentificationNumber()</summary>
        </member>
        <member name="P:Domain.Models.Customers.Fakes.ShimCustomer.AllInstances.IdentificationNumberSetString">
            <summary>Sets the shim of Customer.set_IdentificationNumber(String value)</summary>
        </member>
        <member name="P:Domain.Models.Customers.Fakes.ShimCustomer.AllInstances.LastNameGet">
            <summary>Sets the shim of Customer.get_LastName()</summary>
        </member>
        <member name="P:Domain.Models.Customers.Fakes.ShimCustomer.AllInstances.LastNameSetString">
            <summary>Sets the shim of Customer.set_LastName(String value)</summary>
        </member>
        <member name="P:Domain.Models.Customers.Fakes.ShimCustomer.AllInstances.MiddleNameGet">
            <summary>Sets the shim of Customer.get_MiddleName()</summary>
        </member>
        <member name="P:Domain.Models.Customers.Fakes.ShimCustomer.AllInstances.MiddleNameSetString">
            <summary>Sets the shim of Customer.set_MiddleName(String value)</summary>
        </member>
        <member name="P:Domain.Models.Customers.Fakes.ShimCustomer.AllInstances.PhoneGet">
            <summary>Sets the shim of Customer.get_Phone()</summary>
        </member>
        <member name="P:Domain.Models.Customers.Fakes.ShimCustomer.AllInstances.PhoneSetString">
            <summary>Sets the shim of Customer.set_Phone(String value)</summary>
        </member>
        <member name="T:Domain.Models.Customers.Fakes.StubCustomer">
            <summary>Stub type of Domain.Models.Customers.Customer</summary>
        </member>
        <member name="M:Domain.Models.Customers.Fakes.StubCustomer.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Domain.Models.Customers.Fakes.StubCustomer.AttachBackingFieldToId">
            <summary>Attaches delegates to emulate StubCustomer.Id as a property with a backing field.</summary>
        </member>
        <member name="M:Domain.Models.Customers.Fakes.StubCustomer.AttachBackingFieldToPasswordHash">
            <summary>Attaches delegates to emulate StubCustomer.PasswordHash as a property with a backing field.</summary>
        </member>
        <member name="M:Domain.Models.Customers.Fakes.StubCustomer.AttachBackingFieldToSecurityStamp">
            <summary>Attaches delegates to emulate StubCustomer.SecurityStamp as a property with a backing field.</summary>
        </member>
        <member name="M:Domain.Models.Customers.Fakes.StubCustomer.AttachBackingFieldToUserName">
            <summary>Attaches delegates to emulate StubCustomer.UserName as a property with a backing field.</summary>
        </member>
        <member name="F:Domain.Models.Customers.Fakes.StubCustomer.IdGet">
            <summary>Sets the stub of IdentityUser.get_Id()</summary>
        </member>
        <member name="F:Domain.Models.Customers.Fakes.StubCustomer.IdSetString">
            <summary>Sets the stub of IdentityUser.set_Id(String value)</summary>
        </member>
        <member name="M:Domain.Models.Customers.Fakes.StubCustomer.InitializeStub">
            <summary>Initializes a new instance of type StubCustomer</summary>
        </member>
        <member name="F:Domain.Models.Customers.Fakes.StubCustomer.PasswordHashGet">
            <summary>Sets the stub of IdentityUser.get_PasswordHash()</summary>
        </member>
        <member name="F:Domain.Models.Customers.Fakes.StubCustomer.PasswordHashSetString">
            <summary>Sets the stub of IdentityUser.set_PasswordHash(String value)</summary>
        </member>
        <member name="F:Domain.Models.Customers.Fakes.StubCustomer.SecurityStampGet">
            <summary>Sets the stub of IdentityUser.get_SecurityStamp()</summary>
        </member>
        <member name="F:Domain.Models.Customers.Fakes.StubCustomer.SecurityStampSetString">
            <summary>Sets the stub of IdentityUser.set_SecurityStamp(String value)</summary>
        </member>
        <member name="F:Domain.Models.Customers.Fakes.StubCustomer.UserNameGet">
            <summary>Sets the stub of IdentityUser.get_UserName()</summary>
        </member>
        <member name="F:Domain.Models.Customers.Fakes.StubCustomer.UserNameSetString">
            <summary>Sets the stub of IdentityUser.set_UserName(String value)</summary>
        </member>
        <member name="P:Domain.Models.Customers.Fakes.StubCustomer.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Domain.Models.Customers.Fakes.StubCustomer.Id">
            <summary>Sets the stub of IdentityUser.get_Id()</summary>
        </member>
        <member name="P:Domain.Models.Customers.Fakes.StubCustomer.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Domain.Models.Customers.Fakes.StubCustomer.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Domain.Models.Customers.Fakes.StubCustomer.PasswordHash">
            <summary>Sets the stub of IdentityUser.get_PasswordHash()</summary>
        </member>
        <member name="P:Domain.Models.Customers.Fakes.StubCustomer.SecurityStamp">
            <summary>Sets the stub of IdentityUser.get_SecurityStamp()</summary>
        </member>
        <member name="P:Domain.Models.Customers.Fakes.StubCustomer.UserName">
            <summary>Sets the stub of IdentityUser.get_UserName()</summary>
        </member>
        <member name="T:Domain.Models.Customers.Fakes.StubICustomerRepository">
            <summary>Stub type of Domain.Models.Customers.ICustomerRepository</summary>
        </member>
        <member name="M:Domain.Models.Customers.Fakes.StubICustomerRepository.#ctor">
            <summary>Initializes a new instance of type StubICustomerRepository</summary>
        </member>
        <member name="F:Domain.Models.Customers.Fakes.StubICustomerRepository.DeleteCustomer">
            <summary>Sets the stub of IRepository`2.Delete(!0 entity)</summary>
        </member>
        <member name="M:Domain.Models.Customers.Fakes.StubICustomerRepository.d::Domain#IRepository{Domain#Models#Customers#Customer@System#Guid}#Delete(Domain.Models.Customers.Customer)">
            <summary>Sets the stub of IRepository`2.Delete(!0 entity)</summary>
        </member>
        <member name="M:Domain.Models.Customers.Fakes.StubICustomerRepository.d::Domain#IRepository{Domain#Models#Customers#Customer@System#Guid}#Get(System.Func{Domain.Models.Customers.Customer,System.Boolean})">
            <summary>Sets the stub of IRepository`2.Get(Func`2&lt;!0,Boolean&gt; filter)</summary>
        </member>
        <member name="M:Domain.Models.Customers.Fakes.StubICustomerRepository.d::Domain#IRepository{Domain#Models#Customers#Customer@System#Guid}#GetAll">
            <summary>Sets the stub of IRepository`2.GetAll()</summary>
        </member>
        <member name="M:Domain.Models.Customers.Fakes.StubICustomerRepository.d::Domain#IRepository{Domain#Models#Customers#Customer@System#Guid}#GetAll(System.Func{Domain.Models.Customers.Customer,System.Boolean})">
            <summary>Sets the stub of IRepository`2.GetAll(Func`2&lt;!0,Boolean&gt; filter)</summary>
        </member>
        <member name="M:Domain.Models.Customers.Fakes.StubICustomerRepository.d::Domain#IRepository{Domain#Models#Customers#Customer@System#Guid}#Upsert(Domain.Models.Customers.Customer[])">
            <summary>Sets the stub of IRepository`2.Upsert(!0[] entities)</summary>
        </member>
        <member name="F:Domain.Models.Customers.Fakes.StubICustomerRepository.GetAll">
            <summary>Sets the stub of IRepository`2.GetAll()</summary>
        </member>
        <member name="F:Domain.Models.Customers.Fakes.StubICustomerRepository.GetAllFuncOfCustomerBoolean">
            <summary>Sets the stub of IRepository`2.GetAll(Func`2&lt;!0,Boolean&gt; filter)</summary>
        </member>
        <member name="F:Domain.Models.Customers.Fakes.StubICustomerRepository.GetFuncOfCustomerBoolean">
            <summary>Sets the stub of IRepository`2.Get(Func`2&lt;!0,Boolean&gt; filter)</summary>
        </member>
        <member name="F:Domain.Models.Customers.Fakes.StubICustomerRepository.UpsertCustomerArray">
            <summary>Sets the stub of IRepository`2.Upsert(!0[] entities)</summary>
        </member>
        <member name="T:Domain.Models.Employees.Fakes.StubIEmployeeRepository">
            <summary>Stub type of Domain.Models.Employees.IEmployeeRepository</summary>
        </member>
        <member name="M:Domain.Models.Employees.Fakes.StubIEmployeeRepository.#ctor">
            <summary>Initializes a new instance of type StubIEmployeeRepository</summary>
        </member>
        <member name="F:Domain.Models.Employees.Fakes.StubIEmployeeRepository.DeleteEmployee">
            <summary>Sets the stub of IRepository`2.Delete(!0 entity)</summary>
        </member>
        <member name="M:Domain.Models.Employees.Fakes.StubIEmployeeRepository.d::Domain#IRepository{Domain#Models#Users#Employee@System#Guid}#Delete(Domain.Models.Users.Employee)">
            <summary>Sets the stub of IRepository`2.Delete(!0 entity)</summary>
        </member>
        <member name="M:Domain.Models.Employees.Fakes.StubIEmployeeRepository.d::Domain#IRepository{Domain#Models#Users#Employee@System#Guid}#Get(System.Func{Domain.Models.Users.Employee,System.Boolean})">
            <summary>Sets the stub of IRepository`2.Get(Func`2&lt;!0,Boolean&gt; filter)</summary>
        </member>
        <member name="M:Domain.Models.Employees.Fakes.StubIEmployeeRepository.d::Domain#IRepository{Domain#Models#Users#Employee@System#Guid}#GetAll">
            <summary>Sets the stub of IRepository`2.GetAll()</summary>
        </member>
        <member name="M:Domain.Models.Employees.Fakes.StubIEmployeeRepository.d::Domain#IRepository{Domain#Models#Users#Employee@System#Guid}#GetAll(System.Func{Domain.Models.Users.Employee,System.Boolean})">
            <summary>Sets the stub of IRepository`2.GetAll(Func`2&lt;!0,Boolean&gt; filter)</summary>
        </member>
        <member name="M:Domain.Models.Employees.Fakes.StubIEmployeeRepository.d::Domain#IRepository{Domain#Models#Users#Employee@System#Guid}#Upsert(Domain.Models.Users.Employee[])">
            <summary>Sets the stub of IRepository`2.Upsert(!0[] entities)</summary>
        </member>
        <member name="F:Domain.Models.Employees.Fakes.StubIEmployeeRepository.GetAll">
            <summary>Sets the stub of IRepository`2.GetAll()</summary>
        </member>
        <member name="F:Domain.Models.Employees.Fakes.StubIEmployeeRepository.GetAllFuncOfEmployeeBoolean">
            <summary>Sets the stub of IRepository`2.GetAll(Func`2&lt;!0,Boolean&gt; filter)</summary>
        </member>
        <member name="F:Domain.Models.Employees.Fakes.StubIEmployeeRepository.GetFuncOfEmployeeBoolean">
            <summary>Sets the stub of IRepository`2.Get(Func`2&lt;!0,Boolean&gt; filter)</summary>
        </member>
        <member name="F:Domain.Models.Employees.Fakes.StubIEmployeeRepository.UpsertEmployeeArray">
            <summary>Sets the stub of IRepository`2.Upsert(!0[] entities)</summary>
        </member>
        <member name="T:Domain.Models.Loans.Fakes.ShimDocument">
            <summary>Shim type of Domain.Models.Loans.Document</summary>
        </member>
        <member name="M:Domain.Models.Loans.Fakes.ShimDocument.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Domain.Models.Loans.Fakes.ShimDocument.#ctor(Domain.Models.Loans.Document)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Domain.Models.Loans.Fakes.ShimDocument.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Domain.Models.Loans.Fakes.ShimDocument.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimDocument.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimDocument.Constructor">
            <summary>Sets the shim of Document.Document()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimDocument.CustomerGet">
            <summary>Sets the shim of Document.get_Customer()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimDocument.CustomerIdGet">
            <summary>Sets the shim of Document.get_CustomerId()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimDocument.CustomerIdSetString">
            <summary>Sets the shim of Document.set_CustomerId(String value)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimDocument.CustomerSetCustomer">
            <summary>Sets the shim of Document.set_Customer(Customer value)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimDocument.DocTypeGet">
            <summary>Sets the shim of Document.get_DocType()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimDocument.DocTypeSetDocType">
            <summary>Sets the shim of Document.set_DocType(DocType value)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimDocument.IdGet">
            <summary>Sets the shim of Document.get_Id()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimDocument.IdSetGuid">
            <summary>Sets the shim of Document.set_Id(Guid value)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimDocument.LoanApplicationsGet">
            <summary>Sets the shim of Document.get_LoanApplications()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimDocument.LoanApplicationsSetIEnumerableOfLoanApplication">
            <summary>Sets the shim of Document.set_LoanApplications(IEnumerable`1&lt;LoanApplication&gt; value)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimDocument.NumberGet">
            <summary>Sets the shim of Document.get_Number()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimDocument.NumberSetString">
            <summary>Sets the shim of Document.set_Number(String value)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimDocument.TariffDocTypeGet">
            <summary>Sets the shim of Document.get_TariffDocType()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimDocument.TariffDocTypeSetTariffDocType">
            <summary>Sets the shim of Document.set_TariffDocType(TariffDocType value)</summary>
        </member>
        <member name="T:Domain.Models.Loans.Fakes.ShimDocument.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimDocument.AllInstances.CustomerGet">
            <summary>Sets the shim of Document.get_Customer()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimDocument.AllInstances.CustomerIdGet">
            <summary>Sets the shim of Document.get_CustomerId()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimDocument.AllInstances.CustomerIdSetString">
            <summary>Sets the shim of Document.set_CustomerId(String value)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimDocument.AllInstances.CustomerSetCustomer">
            <summary>Sets the shim of Document.set_Customer(Customer value)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimDocument.AllInstances.DocTypeGet">
            <summary>Sets the shim of Document.get_DocType()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimDocument.AllInstances.DocTypeSetDocType">
            <summary>Sets the shim of Document.set_DocType(DocType value)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimDocument.AllInstances.IdGet">
            <summary>Sets the shim of Document.get_Id()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimDocument.AllInstances.IdSetGuid">
            <summary>Sets the shim of Document.set_Id(Guid value)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimDocument.AllInstances.LoanApplicationsGet">
            <summary>Sets the shim of Document.get_LoanApplications()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimDocument.AllInstances.LoanApplicationsSetIEnumerableOfLoanApplication">
            <summary>Sets the shim of Document.set_LoanApplications(IEnumerable`1&lt;LoanApplication&gt; value)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimDocument.AllInstances.NumberGet">
            <summary>Sets the shim of Document.get_Number()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimDocument.AllInstances.NumberSetString">
            <summary>Sets the shim of Document.set_Number(String value)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimDocument.AllInstances.TariffDocTypeGet">
            <summary>Sets the shim of Document.get_TariffDocType()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimDocument.AllInstances.TariffDocTypeSetTariffDocType">
            <summary>Sets the shim of Document.set_TariffDocType(TariffDocType value)</summary>
        </member>
        <member name="T:Domain.Models.Loans.Fakes.ShimLoan">
            <summary>Shim type of Domain.Models.Loans.Loan</summary>
        </member>
        <member name="M:Domain.Models.Loans.Fakes.ShimLoan.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Domain.Models.Loans.Fakes.ShimLoan.#ctor(Domain.Models.Loans.Loan)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Domain.Models.Loans.Fakes.ShimLoan.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Domain.Models.Loans.Fakes.ShimLoan.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimLoan.AccountsGet">
            <summary>Sets the shim of Loan.get_Accounts()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimLoan.AccountsSetICollectionOfAccount">
            <summary>Sets the shim of Loan.set_Accounts(ICollection`1&lt;Account&gt; value)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimLoan.ApplicationGet">
            <summary>Sets the shim of Loan.get_Application()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimLoan.ApplicationSetLoanApplication">
            <summary>Sets the shim of Loan.set_Application(LoanApplication value)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimLoan.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimLoan.Constructor">
            <summary>Sets the shim of Loan.Loan()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimLoan.CustomerGet">
            <summary>Sets the shim of Loan.get_Customer()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimLoan.CustomerSetCustomer">
            <summary>Sets the shim of Loan.set_Customer(Customer value)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimLoan.IdGet">
            <summary>Sets the shim of Loan.get_Id()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimLoan.IdSetGuid">
            <summary>Sets the shim of Loan.set_Id(Guid value)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimLoan.IsClosedGet">
            <summary>Sets the shim of Loan.get_IsClosed()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimLoan.IsClosedSetBoolean">
            <summary>Sets the shim of Loan.set_IsClosed(Boolean value)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimLoan.PaymentScheduleGet">
            <summary>Sets the shim of Loan.get_PaymentSchedule()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimLoan.PaymentScheduleSetPaymentSchedule">
            <summary>Sets the shim of Loan.set_PaymentSchedule(PaymentSchedule value)</summary>
        </member>
        <member name="T:Domain.Models.Loans.Fakes.ShimLoan.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimLoan.AllInstances.AccountsGet">
            <summary>Sets the shim of Loan.get_Accounts()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimLoan.AllInstances.AccountsSetICollectionOfAccount">
            <summary>Sets the shim of Loan.set_Accounts(ICollection`1&lt;Account&gt; value)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimLoan.AllInstances.ApplicationGet">
            <summary>Sets the shim of Loan.get_Application()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimLoan.AllInstances.ApplicationSetLoanApplication">
            <summary>Sets the shim of Loan.set_Application(LoanApplication value)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimLoan.AllInstances.CustomerGet">
            <summary>Sets the shim of Loan.get_Customer()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimLoan.AllInstances.CustomerSetCustomer">
            <summary>Sets the shim of Loan.set_Customer(Customer value)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimLoan.AllInstances.IdGet">
            <summary>Sets the shim of Loan.get_Id()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimLoan.AllInstances.IdSetGuid">
            <summary>Sets the shim of Loan.set_Id(Guid value)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimLoan.AllInstances.IsClosedGet">
            <summary>Sets the shim of Loan.get_IsClosed()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimLoan.AllInstances.IsClosedSetBoolean">
            <summary>Sets the shim of Loan.set_IsClosed(Boolean value)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimLoan.AllInstances.PaymentScheduleGet">
            <summary>Sets the shim of Loan.get_PaymentSchedule()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimLoan.AllInstances.PaymentScheduleSetPaymentSchedule">
            <summary>Sets the shim of Loan.set_PaymentSchedule(PaymentSchedule value)</summary>
        </member>
        <member name="T:Domain.Models.Loans.Fakes.ShimLoanApplication">
            <summary>Shim type of Domain.Models.Loans.LoanApplication</summary>
        </member>
        <member name="M:Domain.Models.Loans.Fakes.ShimLoanApplication.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Domain.Models.Loans.Fakes.ShimLoanApplication.#ctor(Domain.Models.Loans.LoanApplication)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Domain.Models.Loans.Fakes.ShimLoanApplication.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Domain.Models.Loans.Fakes.ShimLoanApplication.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimLoanApplication.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimLoanApplication.CellPhoneGet">
            <summary>Sets the shim of LoanApplication.get_CellPhone()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimLoanApplication.CellPhoneSetString">
            <summary>Sets the shim of LoanApplication.set_CellPhone(String value)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimLoanApplication.Constructor">
            <summary>Sets the shim of LoanApplication.LoanApplication()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimLoanApplication.CurrencyGet">
            <summary>Sets the shim of LoanApplication.get_Currency()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimLoanApplication.CurrencySetCurrency">
            <summary>Sets the shim of LoanApplication.set_Currency(Currency value)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimLoanApplication.DocumentsGet">
            <summary>Sets the shim of LoanApplication.get_Documents()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimLoanApplication.DocumentsSetICollectionOfDocument">
            <summary>Sets the shim of LoanApplication.set_Documents(ICollection`1&lt;Document&gt; value)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimLoanApplication.IdGet">
            <summary>Sets the shim of LoanApplication.get_Id()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimLoanApplication.IdSetGuid">
            <summary>Sets the shim of LoanApplication.set_Id(Guid value)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimLoanApplication.LoanAmountGet">
            <summary>Sets the shim of LoanApplication.get_LoanAmount()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimLoanApplication.LoanAmountSetDecimal">
            <summary>Sets the shim of LoanApplication.set_LoanAmount(Decimal value)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimLoanApplication.LoanPurposeGet">
            <summary>Sets the shim of LoanApplication.get_LoanPurpose()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimLoanApplication.LoanPurposeSetLoanPurpose">
            <summary>Sets the shim of LoanApplication.set_LoanPurpose(LoanPurpose value)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimLoanApplication.StatusGet">
            <summary>Sets the shim of LoanApplication.get_Status()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimLoanApplication.StatusSetLoanApplicationStatus">
            <summary>Sets the shim of LoanApplication.set_Status(LoanApplicationStatus value)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimLoanApplication.TariffGet">
            <summary>Sets the shim of LoanApplication.get_Tariff()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimLoanApplication.TariffSetTariff">
            <summary>Sets the shim of LoanApplication.set_Tariff(Tariff value)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimLoanApplication.TermGet">
            <summary>Sets the shim of LoanApplication.get_Term()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimLoanApplication.TermSetInt32">
            <summary>Sets the shim of LoanApplication.set_Term(Int32 value)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimLoanApplication.TimeContractedGet">
            <summary>Sets the shim of LoanApplication.get_TimeContracted()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimLoanApplication.TimeContractedSetNullableOfDateTime">
            <summary>Sets the shim of LoanApplication.set_TimeContracted(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimLoanApplication.TimeCreatedGet">
            <summary>Sets the shim of LoanApplication.get_TimeCreated()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimLoanApplication.TimeCreatedSetDateTime">
            <summary>Sets the shim of LoanApplication.set_TimeCreated(DateTime value)</summary>
        </member>
        <member name="T:Domain.Models.Loans.Fakes.ShimLoanApplication.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimLoanApplication.AllInstances.CellPhoneGet">
            <summary>Sets the shim of LoanApplication.get_CellPhone()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimLoanApplication.AllInstances.CellPhoneSetString">
            <summary>Sets the shim of LoanApplication.set_CellPhone(String value)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimLoanApplication.AllInstances.CurrencyGet">
            <summary>Sets the shim of LoanApplication.get_Currency()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimLoanApplication.AllInstances.CurrencySetCurrency">
            <summary>Sets the shim of LoanApplication.set_Currency(Currency value)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimLoanApplication.AllInstances.DocumentsGet">
            <summary>Sets the shim of LoanApplication.get_Documents()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimLoanApplication.AllInstances.DocumentsSetICollectionOfDocument">
            <summary>Sets the shim of LoanApplication.set_Documents(ICollection`1&lt;Document&gt; value)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimLoanApplication.AllInstances.IdGet">
            <summary>Sets the shim of LoanApplication.get_Id()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimLoanApplication.AllInstances.IdSetGuid">
            <summary>Sets the shim of LoanApplication.set_Id(Guid value)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimLoanApplication.AllInstances.LoanAmountGet">
            <summary>Sets the shim of LoanApplication.get_LoanAmount()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimLoanApplication.AllInstances.LoanAmountSetDecimal">
            <summary>Sets the shim of LoanApplication.set_LoanAmount(Decimal value)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimLoanApplication.AllInstances.LoanPurposeGet">
            <summary>Sets the shim of LoanApplication.get_LoanPurpose()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimLoanApplication.AllInstances.LoanPurposeSetLoanPurpose">
            <summary>Sets the shim of LoanApplication.set_LoanPurpose(LoanPurpose value)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimLoanApplication.AllInstances.StatusGet">
            <summary>Sets the shim of LoanApplication.get_Status()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimLoanApplication.AllInstances.StatusSetLoanApplicationStatus">
            <summary>Sets the shim of LoanApplication.set_Status(LoanApplicationStatus value)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimLoanApplication.AllInstances.TariffGet">
            <summary>Sets the shim of LoanApplication.get_Tariff()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimLoanApplication.AllInstances.TariffSetTariff">
            <summary>Sets the shim of LoanApplication.set_Tariff(Tariff value)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimLoanApplication.AllInstances.TermGet">
            <summary>Sets the shim of LoanApplication.get_Term()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimLoanApplication.AllInstances.TermSetInt32">
            <summary>Sets the shim of LoanApplication.set_Term(Int32 value)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimLoanApplication.AllInstances.TimeContractedGet">
            <summary>Sets the shim of LoanApplication.get_TimeContracted()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimLoanApplication.AllInstances.TimeContractedSetNullableOfDateTime">
            <summary>Sets the shim of LoanApplication.set_TimeContracted(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimLoanApplication.AllInstances.TimeCreatedGet">
            <summary>Sets the shim of LoanApplication.get_TimeCreated()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimLoanApplication.AllInstances.TimeCreatedSetDateTime">
            <summary>Sets the shim of LoanApplication.set_TimeCreated(DateTime value)</summary>
        </member>
        <member name="T:Domain.Models.Loans.Fakes.ShimPayment">
            <summary>Shim type of Domain.Models.Loans.Payment</summary>
        </member>
        <member name="M:Domain.Models.Loans.Fakes.ShimPayment.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Domain.Models.Loans.Fakes.ShimPayment.#ctor(Domain.Models.Loans.Payment)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Domain.Models.Loans.Fakes.ShimPayment.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Domain.Models.Loans.Fakes.ShimPayment.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimPayment.AmountGet">
            <summary>Sets the shim of Payment.get_Amount()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimPayment.AmountSetDecimal">
            <summary>Sets the shim of Payment.set_Amount(Decimal value)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimPayment.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimPayment.Constructor">
            <summary>Sets the shim of Payment.Payment()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimPayment.IdGet">
            <summary>Sets the shim of Payment.get_Id()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimPayment.IdSetGuid">
            <summary>Sets the shim of Payment.set_Id(Guid value)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimPayment.SameIdentityAsPayment">
            <summary>Sets the shim of Payment.SameIdentityAs(Payment other)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimPayment.ShouldBePaidBeforeGet">
            <summary>Sets the shim of Payment.get_ShouldBePaidBefore()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimPayment.ShouldBePaidBeforeSetDateTime">
            <summary>Sets the shim of Payment.set_ShouldBePaidBefore(DateTime value)</summary>
        </member>
        <member name="T:Domain.Models.Loans.Fakes.ShimPayment.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimPayment.AllInstances.AmountGet">
            <summary>Sets the shim of Payment.get_Amount()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimPayment.AllInstances.AmountSetDecimal">
            <summary>Sets the shim of Payment.set_Amount(Decimal value)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimPayment.AllInstances.IdGet">
            <summary>Sets the shim of Payment.get_Id()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimPayment.AllInstances.IdSetGuid">
            <summary>Sets the shim of Payment.set_Id(Guid value)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimPayment.AllInstances.SameIdentityAsPayment">
            <summary>Sets the shim of Payment.SameIdentityAs(Payment other)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimPayment.AllInstances.ShouldBePaidBeforeGet">
            <summary>Sets the shim of Payment.get_ShouldBePaidBefore()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimPayment.AllInstances.ShouldBePaidBeforeSetDateTime">
            <summary>Sets the shim of Payment.set_ShouldBePaidBefore(DateTime value)</summary>
        </member>
        <member name="T:Domain.Models.Loans.Fakes.ShimPaymentSchedule">
            <summary>Shim type of Domain.Models.Loans.PaymentSchedule</summary>
        </member>
        <member name="M:Domain.Models.Loans.Fakes.ShimPaymentSchedule.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Domain.Models.Loans.Fakes.ShimPaymentSchedule.#ctor(Domain.Models.Loans.PaymentSchedule)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Domain.Models.Loans.Fakes.ShimPaymentSchedule.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Domain.Models.Loans.Fakes.ShimPaymentSchedule.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimPaymentSchedule.AddPaymentPayment">
            <summary>Sets the shim of PaymentSchedule.AddPayment(Payment payment)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimPaymentSchedule.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimPaymentSchedule.Constructor">
            <summary>Sets the shim of PaymentSchedule.PaymentSchedule()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimPaymentSchedule.IdGet">
            <summary>Sets the shim of PaymentSchedule.get_Id()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimPaymentSchedule.IdSetGuid">
            <summary>Sets the shim of PaymentSchedule.set_Id(Guid value)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimPaymentSchedule.PaymentsGet">
            <summary>Sets the shim of PaymentSchedule.get_Payments()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimPaymentSchedule.PaymentsSetCollectionOfPayment">
            <summary>Sets the shim of PaymentSchedule.set_Payments(Collection`1&lt;Payment&gt; value)</summary>
        </member>
        <member name="T:Domain.Models.Loans.Fakes.ShimPaymentSchedule.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimPaymentSchedule.AllInstances.AddPaymentPayment">
            <summary>Sets the shim of PaymentSchedule.AddPayment(Payment payment)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimPaymentSchedule.AllInstances.IdGet">
            <summary>Sets the shim of PaymentSchedule.get_Id()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimPaymentSchedule.AllInstances.IdSetGuid">
            <summary>Sets the shim of PaymentSchedule.set_Id(Guid value)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimPaymentSchedule.AllInstances.PaymentsGet">
            <summary>Sets the shim of PaymentSchedule.get_Payments()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimPaymentSchedule.AllInstances.PaymentsSetCollectionOfPayment">
            <summary>Sets the shim of PaymentSchedule.set_Payments(Collection`1&lt;Payment&gt; value)</summary>
        </member>
        <member name="T:Domain.Models.Loans.Fakes.ShimTariff">
            <summary>Shim type of Domain.Models.Loans.Tariff</summary>
        </member>
        <member name="M:Domain.Models.Loans.Fakes.ShimTariff.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Domain.Models.Loans.Fakes.ShimTariff.#ctor(Domain.Models.Loans.Tariff)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Domain.Models.Loans.Fakes.ShimTariff.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Domain.Models.Loans.Fakes.ShimTariff.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimTariff.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimTariff.CalculateTotalSumDecimalInt32">
            <summary>Sets the shim of Tariff.CalculateTotalSum(Decimal sum, Int32 term)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimTariff.Constructor">
            <summary>Sets the shim of Tariff.Tariff()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimTariff.CreationDateGet">
            <summary>Sets the shim of Tariff.get_CreationDate()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimTariff.CreationDateSetDateTime">
            <summary>Sets the shim of Tariff.set_CreationDate(DateTime value)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimTariff.EndDateGet">
            <summary>Sets the shim of Tariff.get_EndDate()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimTariff.EndDateSetNullableOfDateTime">
            <summary>Sets the shim of Tariff.set_EndDate(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimTariff.IdGet">
            <summary>Sets the shim of Tariff.get_Id()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimTariff.IdSetGuid">
            <summary>Sets the shim of Tariff.set_Id(Guid value)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimTariff.InitialFeeGet">
            <summary>Sets the shim of Tariff.get_InitialFee()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimTariff.InitialFeeSetDecimal">
            <summary>Sets the shim of Tariff.set_InitialFee(Decimal value)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimTariff.InterestRateGet">
            <summary>Sets the shim of Tariff.get_InterestRate()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimTariff.InterestRateSetDecimal">
            <summary>Sets the shim of Tariff.set_InterestRate(Decimal value)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimTariff.IsGuarantorNeededGet">
            <summary>Sets the shim of Tariff.get_IsGuarantorNeeded()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimTariff.IsGuarantorNeededSetBoolean">
            <summary>Sets the shim of Tariff.set_IsGuarantorNeeded(Boolean value)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimTariff.LoanPurposeGet">
            <summary>Sets the shim of Tariff.get_LoanPurpose()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimTariff.LoanPurposeSetLoanPurpose">
            <summary>Sets the shim of Tariff.set_LoanPurpose(LoanPurpose value)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimTariff.MaxAgeGet">
            <summary>Sets the shim of Tariff.get_MaxAge()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimTariff.MaxAgeSetNullableOfUInt16">
            <summary>Sets the shim of Tariff.set_MaxAge(Nullable`1&lt;UInt16&gt; value)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimTariff.MaxAmountGet">
            <summary>Sets the shim of Tariff.get_MaxAmount()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimTariff.MaxAmountSetDecimal">
            <summary>Sets the shim of Tariff.set_MaxAmount(Decimal value)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimTariff.MaxTermGet">
            <summary>Sets the shim of Tariff.get_MaxTerm()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimTariff.MaxTermSetInt32">
            <summary>Sets the shim of Tariff.set_MaxTerm(Int32 value)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimTariff.MinAgeGet">
            <summary>Sets the shim of Tariff.get_MinAge()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimTariff.MinAgeSetUInt16">
            <summary>Sets the shim of Tariff.set_MinAge(UInt16 value)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimTariff.MinAmountGet">
            <summary>Sets the shim of Tariff.get_MinAmount()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimTariff.MinAmountSetDecimal">
            <summary>Sets the shim of Tariff.set_MinAmount(Decimal value)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimTariff.MinTermGet">
            <summary>Sets the shim of Tariff.get_MinTerm()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimTariff.MinTermSetInt32">
            <summary>Sets the shim of Tariff.set_MinTerm(Int32 value)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimTariff.NameGet">
            <summary>Sets the shim of Tariff.get_Name()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimTariff.NameSetString">
            <summary>Sets the shim of Tariff.set_Name(String value)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimTariff.StartDateGet">
            <summary>Sets the shim of Tariff.get_StartDate()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimTariff.StartDateSetNullableOfDateTime">
            <summary>Sets the shim of Tariff.set_StartDate(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimTariff.ValidateLoanApplication">
            <summary>Sets the shim of Tariff.Validate(LoanApplication loanApplication)</summary>
        </member>
        <member name="T:Domain.Models.Loans.Fakes.ShimTariff.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimTariff.AllInstances.CalculateTotalSumDecimalInt32">
            <summary>Sets the shim of Tariff.CalculateTotalSum(Decimal sum, Int32 term)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimTariff.AllInstances.CreationDateGet">
            <summary>Sets the shim of Tariff.get_CreationDate()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimTariff.AllInstances.CreationDateSetDateTime">
            <summary>Sets the shim of Tariff.set_CreationDate(DateTime value)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimTariff.AllInstances.EndDateGet">
            <summary>Sets the shim of Tariff.get_EndDate()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimTariff.AllInstances.EndDateSetNullableOfDateTime">
            <summary>Sets the shim of Tariff.set_EndDate(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimTariff.AllInstances.IdGet">
            <summary>Sets the shim of Tariff.get_Id()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimTariff.AllInstances.IdSetGuid">
            <summary>Sets the shim of Tariff.set_Id(Guid value)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimTariff.AllInstances.InitialFeeGet">
            <summary>Sets the shim of Tariff.get_InitialFee()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimTariff.AllInstances.InitialFeeSetDecimal">
            <summary>Sets the shim of Tariff.set_InitialFee(Decimal value)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimTariff.AllInstances.InterestRateGet">
            <summary>Sets the shim of Tariff.get_InterestRate()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimTariff.AllInstances.InterestRateSetDecimal">
            <summary>Sets the shim of Tariff.set_InterestRate(Decimal value)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimTariff.AllInstances.IsGuarantorNeededGet">
            <summary>Sets the shim of Tariff.get_IsGuarantorNeeded()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimTariff.AllInstances.IsGuarantorNeededSetBoolean">
            <summary>Sets the shim of Tariff.set_IsGuarantorNeeded(Boolean value)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimTariff.AllInstances.LoanPurposeGet">
            <summary>Sets the shim of Tariff.get_LoanPurpose()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimTariff.AllInstances.LoanPurposeSetLoanPurpose">
            <summary>Sets the shim of Tariff.set_LoanPurpose(LoanPurpose value)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimTariff.AllInstances.MaxAgeGet">
            <summary>Sets the shim of Tariff.get_MaxAge()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimTariff.AllInstances.MaxAgeSetNullableOfUInt16">
            <summary>Sets the shim of Tariff.set_MaxAge(Nullable`1&lt;UInt16&gt; value)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimTariff.AllInstances.MaxAmountGet">
            <summary>Sets the shim of Tariff.get_MaxAmount()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimTariff.AllInstances.MaxAmountSetDecimal">
            <summary>Sets the shim of Tariff.set_MaxAmount(Decimal value)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimTariff.AllInstances.MaxTermGet">
            <summary>Sets the shim of Tariff.get_MaxTerm()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimTariff.AllInstances.MaxTermSetInt32">
            <summary>Sets the shim of Tariff.set_MaxTerm(Int32 value)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimTariff.AllInstances.MinAgeGet">
            <summary>Sets the shim of Tariff.get_MinAge()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimTariff.AllInstances.MinAgeSetUInt16">
            <summary>Sets the shim of Tariff.set_MinAge(UInt16 value)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimTariff.AllInstances.MinAmountGet">
            <summary>Sets the shim of Tariff.get_MinAmount()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimTariff.AllInstances.MinAmountSetDecimal">
            <summary>Sets the shim of Tariff.set_MinAmount(Decimal value)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimTariff.AllInstances.MinTermGet">
            <summary>Sets the shim of Tariff.get_MinTerm()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimTariff.AllInstances.MinTermSetInt32">
            <summary>Sets the shim of Tariff.set_MinTerm(Int32 value)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimTariff.AllInstances.NameGet">
            <summary>Sets the shim of Tariff.get_Name()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimTariff.AllInstances.NameSetString">
            <summary>Sets the shim of Tariff.set_Name(String value)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimTariff.AllInstances.StartDateGet">
            <summary>Sets the shim of Tariff.get_StartDate()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimTariff.AllInstances.StartDateSetNullableOfDateTime">
            <summary>Sets the shim of Tariff.set_StartDate(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.ShimTariff.AllInstances.ValidateLoanApplication">
            <summary>Sets the shim of Tariff.Validate(LoanApplication loanApplication)</summary>
        </member>
        <member name="T:Domain.Models.Loans.Fakes.StubDocument">
            <summary>Stub type of Domain.Models.Loans.Document</summary>
        </member>
        <member name="M:Domain.Models.Loans.Fakes.StubDocument.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Domain.Models.Loans.Fakes.StubDocument.AttachBackingFieldToCustomer">
            <summary>Attaches delegates to emulate StubDocument.Customer as a property with a backing field.</summary>
        </member>
        <member name="M:Domain.Models.Loans.Fakes.StubDocument.AttachBackingFieldToLoanApplications">
            <summary>Attaches delegates to emulate StubDocument.LoanApplications as a property with a backing field.</summary>
        </member>
        <member name="F:Domain.Models.Loans.Fakes.StubDocument.CustomerGet">
            <summary>Sets the stub of Document.get_Customer()</summary>
        </member>
        <member name="F:Domain.Models.Loans.Fakes.StubDocument.CustomerSetCustomer">
            <summary>Sets the stub of Document.set_Customer(Customer value)</summary>
        </member>
        <member name="M:Domain.Models.Loans.Fakes.StubDocument.InitializeStub">
            <summary>Initializes a new instance of type StubDocument</summary>
        </member>
        <member name="F:Domain.Models.Loans.Fakes.StubDocument.LoanApplicationsGet">
            <summary>Sets the stub of Document.get_LoanApplications()</summary>
        </member>
        <member name="F:Domain.Models.Loans.Fakes.StubDocument.LoanApplicationsSetIEnumerableOfLoanApplication">
            <summary>Sets the stub of Document.set_LoanApplications(IEnumerable`1&lt;LoanApplication&gt; value)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.StubDocument.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.StubDocument.Customer">
            <summary>Sets the stub of Document.get_Customer()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.StubDocument.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.StubDocument.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.StubDocument.LoanApplications">
            <summary>Sets the stub of Document.get_LoanApplications()</summary>
        </member>
        <member name="T:Domain.Models.Loans.Fakes.StubILoanApplicationRepository">
            <summary>Stub type of Domain.Models.Loans.ILoanApplicationRepository</summary>
        </member>
        <member name="M:Domain.Models.Loans.Fakes.StubILoanApplicationRepository.#ctor">
            <summary>Initializes a new instance of type StubILoanApplicationRepository</summary>
        </member>
        <member name="F:Domain.Models.Loans.Fakes.StubILoanApplicationRepository.ApproveLoanApplication">
            <summary>Sets the stub of ILoanApplicationRepository.Approve(LoanApplication loanApplication)</summary>
        </member>
        <member name="F:Domain.Models.Loans.Fakes.StubILoanApplicationRepository.ContractLoanApplication">
            <summary>Sets the stub of ILoanApplicationRepository.Contract(LoanApplication loanApplication)</summary>
        </member>
        <member name="F:Domain.Models.Loans.Fakes.StubILoanApplicationRepository.DeleteLoanApplication">
            <summary>Sets the stub of IRepository`2.Delete(!0 entity)</summary>
        </member>
        <member name="M:Domain.Models.Loans.Fakes.StubILoanApplicationRepository.d::Domain#IRepository{Domain#Models#Loans#LoanApplication@System#Int64}#Delete(Domain.Models.Loans.LoanApplication)">
            <summary>Sets the stub of IRepository`2.Delete(!0 entity)</summary>
        </member>
        <member name="M:Domain.Models.Loans.Fakes.StubILoanApplicationRepository.d::Domain#IRepository{Domain#Models#Loans#LoanApplication@System#Int64}#Get(System.Func{Domain.Models.Loans.LoanApplication,System.Boolean})">
            <summary>Sets the stub of IRepository`2.Get(Func`2&lt;!0,Boolean&gt; filter)</summary>
        </member>
        <member name="M:Domain.Models.Loans.Fakes.StubILoanApplicationRepository.d::Domain#IRepository{Domain#Models#Loans#LoanApplication@System#Int64}#GetAll">
            <summary>Sets the stub of IRepository`2.GetAll()</summary>
        </member>
        <member name="M:Domain.Models.Loans.Fakes.StubILoanApplicationRepository.d::Domain#IRepository{Domain#Models#Loans#LoanApplication@System#Int64}#GetAll(System.Func{Domain.Models.Loans.LoanApplication,System.Boolean})">
            <summary>Sets the stub of IRepository`2.GetAll(Func`2&lt;!0,Boolean&gt; filter)</summary>
        </member>
        <member name="M:Domain.Models.Loans.Fakes.StubILoanApplicationRepository.d::Domain#IRepository{Domain#Models#Loans#LoanApplication@System#Int64}#Upsert(Domain.Models.Loans.LoanApplication[])">
            <summary>Sets the stub of IRepository`2.Upsert(!0[] entities)</summary>
        </member>
        <member name="M:Domain.Models.Loans.Fakes.StubILoanApplicationRepository.d::Domain#Models#Loans#ILoanApplicationRepository#Approve(Domain.Models.Loans.LoanApplication)">
            <summary>Sets the stub of ILoanApplicationRepository.Approve(LoanApplication loanApplication)</summary>
        </member>
        <member name="M:Domain.Models.Loans.Fakes.StubILoanApplicationRepository.d::Domain#Models#Loans#ILoanApplicationRepository#Contract(Domain.Models.Loans.LoanApplication)">
            <summary>Sets the stub of ILoanApplicationRepository.Contract(LoanApplication loanApplication)</summary>
        </member>
        <member name="M:Domain.Models.Loans.Fakes.StubILoanApplicationRepository.d::Domain#Models#Loans#ILoanApplicationRepository#Reject(Domain.Models.Loans.LoanApplication)">
            <summary>Sets the stub of ILoanApplicationRepository.Reject(LoanApplication loanApplication)</summary>
        </member>
        <member name="F:Domain.Models.Loans.Fakes.StubILoanApplicationRepository.GetAll">
            <summary>Sets the stub of IRepository`2.GetAll()</summary>
        </member>
        <member name="F:Domain.Models.Loans.Fakes.StubILoanApplicationRepository.GetAllFuncOfLoanApplicationBoolean">
            <summary>Sets the stub of IRepository`2.GetAll(Func`2&lt;!0,Boolean&gt; filter)</summary>
        </member>
        <member name="F:Domain.Models.Loans.Fakes.StubILoanApplicationRepository.GetFuncOfLoanApplicationBoolean">
            <summary>Sets the stub of IRepository`2.Get(Func`2&lt;!0,Boolean&gt; filter)</summary>
        </member>
        <member name="F:Domain.Models.Loans.Fakes.StubILoanApplicationRepository.RejectLoanApplication">
            <summary>Sets the stub of ILoanApplicationRepository.Reject(LoanApplication loanApplication)</summary>
        </member>
        <member name="F:Domain.Models.Loans.Fakes.StubILoanApplicationRepository.UpsertLoanApplicationArray">
            <summary>Sets the stub of IRepository`2.Upsert(!0[] entities)</summary>
        </member>
        <member name="T:Domain.Models.Loans.Fakes.StubILoanRepository">
            <summary>Stub type of Domain.Models.Loans.ILoanRepository</summary>
        </member>
        <member name="M:Domain.Models.Loans.Fakes.StubILoanRepository.#ctor">
            <summary>Initializes a new instance of type StubILoanRepository</summary>
        </member>
        <member name="F:Domain.Models.Loans.Fakes.StubILoanRepository.DeleteLoan">
            <summary>Sets the stub of IRepository`2.Delete(!0 entity)</summary>
        </member>
        <member name="M:Domain.Models.Loans.Fakes.StubILoanRepository.d::Domain#IRepository{Domain#Models#Loans#Loan@System#Guid}#Delete(Domain.Models.Loans.Loan)">
            <summary>Sets the stub of IRepository`2.Delete(!0 entity)</summary>
        </member>
        <member name="M:Domain.Models.Loans.Fakes.StubILoanRepository.d::Domain#IRepository{Domain#Models#Loans#Loan@System#Guid}#Get(System.Func{Domain.Models.Loans.Loan,System.Boolean})">
            <summary>Sets the stub of IRepository`2.Get(Func`2&lt;!0,Boolean&gt; filter)</summary>
        </member>
        <member name="M:Domain.Models.Loans.Fakes.StubILoanRepository.d::Domain#IRepository{Domain#Models#Loans#Loan@System#Guid}#GetAll">
            <summary>Sets the stub of IRepository`2.GetAll()</summary>
        </member>
        <member name="M:Domain.Models.Loans.Fakes.StubILoanRepository.d::Domain#IRepository{Domain#Models#Loans#Loan@System#Guid}#GetAll(System.Func{Domain.Models.Loans.Loan,System.Boolean})">
            <summary>Sets the stub of IRepository`2.GetAll(Func`2&lt;!0,Boolean&gt; filter)</summary>
        </member>
        <member name="M:Domain.Models.Loans.Fakes.StubILoanRepository.d::Domain#IRepository{Domain#Models#Loans#Loan@System#Guid}#Upsert(Domain.Models.Loans.Loan[])">
            <summary>Sets the stub of IRepository`2.Upsert(!0[] entities)</summary>
        </member>
        <member name="F:Domain.Models.Loans.Fakes.StubILoanRepository.GetAll">
            <summary>Sets the stub of IRepository`2.GetAll()</summary>
        </member>
        <member name="F:Domain.Models.Loans.Fakes.StubILoanRepository.GetAllFuncOfLoanBoolean">
            <summary>Sets the stub of IRepository`2.GetAll(Func`2&lt;!0,Boolean&gt; filter)</summary>
        </member>
        <member name="F:Domain.Models.Loans.Fakes.StubILoanRepository.GetFuncOfLoanBoolean">
            <summary>Sets the stub of IRepository`2.Get(Func`2&lt;!0,Boolean&gt; filter)</summary>
        </member>
        <member name="F:Domain.Models.Loans.Fakes.StubILoanRepository.UpsertLoanArray">
            <summary>Sets the stub of IRepository`2.Upsert(!0[] entities)</summary>
        </member>
        <member name="T:Domain.Models.Loans.Fakes.StubITariffRepository">
            <summary>Stub type of Domain.Models.Loans.ITariffRepository</summary>
        </member>
        <member name="M:Domain.Models.Loans.Fakes.StubITariffRepository.#ctor">
            <summary>Initializes a new instance of type StubITariffRepository</summary>
        </member>
        <member name="F:Domain.Models.Loans.Fakes.StubITariffRepository.DeleteTariff">
            <summary>Sets the stub of IRepository`2.Delete(!0 entity)</summary>
        </member>
        <member name="M:Domain.Models.Loans.Fakes.StubITariffRepository.d::Domain#IRepository{Domain#Models#Loans#Tariff@System#Int32}#Delete(Domain.Models.Loans.Tariff)">
            <summary>Sets the stub of IRepository`2.Delete(!0 entity)</summary>
        </member>
        <member name="M:Domain.Models.Loans.Fakes.StubITariffRepository.d::Domain#IRepository{Domain#Models#Loans#Tariff@System#Int32}#Get(System.Func{Domain.Models.Loans.Tariff,System.Boolean})">
            <summary>Sets the stub of IRepository`2.Get(Func`2&lt;!0,Boolean&gt; filter)</summary>
        </member>
        <member name="M:Domain.Models.Loans.Fakes.StubITariffRepository.d::Domain#IRepository{Domain#Models#Loans#Tariff@System#Int32}#GetAll">
            <summary>Sets the stub of IRepository`2.GetAll()</summary>
        </member>
        <member name="M:Domain.Models.Loans.Fakes.StubITariffRepository.d::Domain#IRepository{Domain#Models#Loans#Tariff@System#Int32}#GetAll(System.Func{Domain.Models.Loans.Tariff,System.Boolean})">
            <summary>Sets the stub of IRepository`2.GetAll(Func`2&lt;!0,Boolean&gt; filter)</summary>
        </member>
        <member name="M:Domain.Models.Loans.Fakes.StubITariffRepository.d::Domain#IRepository{Domain#Models#Loans#Tariff@System#Int32}#Upsert(Domain.Models.Loans.Tariff[])">
            <summary>Sets the stub of IRepository`2.Upsert(!0[] entities)</summary>
        </member>
        <member name="F:Domain.Models.Loans.Fakes.StubITariffRepository.GetAll">
            <summary>Sets the stub of IRepository`2.GetAll()</summary>
        </member>
        <member name="F:Domain.Models.Loans.Fakes.StubITariffRepository.GetAllFuncOfTariffBoolean">
            <summary>Sets the stub of IRepository`2.GetAll(Func`2&lt;!0,Boolean&gt; filter)</summary>
        </member>
        <member name="F:Domain.Models.Loans.Fakes.StubITariffRepository.GetFuncOfTariffBoolean">
            <summary>Sets the stub of IRepository`2.Get(Func`2&lt;!0,Boolean&gt; filter)</summary>
        </member>
        <member name="F:Domain.Models.Loans.Fakes.StubITariffRepository.UpsertTariffArray">
            <summary>Sets the stub of IRepository`2.Upsert(!0[] entities)</summary>
        </member>
        <member name="T:Domain.Models.Loans.Fakes.StubLoan">
            <summary>Stub type of Domain.Models.Loans.Loan</summary>
        </member>
        <member name="M:Domain.Models.Loans.Fakes.StubLoan.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:Domain.Models.Loans.Fakes.StubLoan.AccountsGet">
            <summary>Sets the stub of Loan.get_Accounts()</summary>
        </member>
        <member name="F:Domain.Models.Loans.Fakes.StubLoan.AccountsSetICollectionOfAccount">
            <summary>Sets the stub of Loan.set_Accounts(ICollection`1&lt;Account&gt; value)</summary>
        </member>
        <member name="F:Domain.Models.Loans.Fakes.StubLoan.ApplicationGet">
            <summary>Sets the stub of Loan.get_Application()</summary>
        </member>
        <member name="F:Domain.Models.Loans.Fakes.StubLoan.ApplicationSetLoanApplication">
            <summary>Sets the stub of Loan.set_Application(LoanApplication value)</summary>
        </member>
        <member name="M:Domain.Models.Loans.Fakes.StubLoan.AttachBackingFieldToAccounts">
            <summary>Attaches delegates to emulate StubLoan.Accounts as a property with a backing field.</summary>
        </member>
        <member name="M:Domain.Models.Loans.Fakes.StubLoan.AttachBackingFieldToApplication">
            <summary>Attaches delegates to emulate StubLoan.Application as a property with a backing field.</summary>
        </member>
        <member name="M:Domain.Models.Loans.Fakes.StubLoan.AttachBackingFieldToCustomer">
            <summary>Attaches delegates to emulate StubLoan.Customer as a property with a backing field.</summary>
        </member>
        <member name="M:Domain.Models.Loans.Fakes.StubLoan.AttachBackingFieldToPaymentSchedule">
            <summary>Attaches delegates to emulate StubLoan.PaymentSchedule as a property with a backing field.</summary>
        </member>
        <member name="F:Domain.Models.Loans.Fakes.StubLoan.CustomerGet">
            <summary>Sets the stub of Loan.get_Customer()</summary>
        </member>
        <member name="F:Domain.Models.Loans.Fakes.StubLoan.CustomerSetCustomer">
            <summary>Sets the stub of Loan.set_Customer(Customer value)</summary>
        </member>
        <member name="M:Domain.Models.Loans.Fakes.StubLoan.InitializeStub">
            <summary>Initializes a new instance of type StubLoan</summary>
        </member>
        <member name="F:Domain.Models.Loans.Fakes.StubLoan.PaymentScheduleGet">
            <summary>Sets the stub of Loan.get_PaymentSchedule()</summary>
        </member>
        <member name="F:Domain.Models.Loans.Fakes.StubLoan.PaymentScheduleSetPaymentSchedule">
            <summary>Sets the stub of Loan.set_PaymentSchedule(PaymentSchedule value)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.StubLoan.Accounts">
            <summary>Sets the stub of Loan.get_Accounts()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.StubLoan.Application">
            <summary>Sets the stub of Loan.get_Application()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.StubLoan.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.StubLoan.Customer">
            <summary>Sets the stub of Loan.get_Customer()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.StubLoan.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.StubLoan.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.StubLoan.PaymentSchedule">
            <summary>Sets the stub of Loan.get_PaymentSchedule()</summary>
        </member>
        <member name="T:Domain.Models.Loans.Fakes.StubLoanApplication">
            <summary>Stub type of Domain.Models.Loans.LoanApplication</summary>
        </member>
        <member name="M:Domain.Models.Loans.Fakes.StubLoanApplication.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Domain.Models.Loans.Fakes.StubLoanApplication.AttachBackingFieldToDocuments">
            <summary>Attaches delegates to emulate StubLoanApplication.Documents as a property with a backing field.</summary>
        </member>
        <member name="M:Domain.Models.Loans.Fakes.StubLoanApplication.AttachBackingFieldToTariff">
            <summary>Attaches delegates to emulate StubLoanApplication.Tariff as a property with a backing field.</summary>
        </member>
        <member name="F:Domain.Models.Loans.Fakes.StubLoanApplication.DocumentsGet">
            <summary>Sets the stub of LoanApplication.get_Documents()</summary>
        </member>
        <member name="F:Domain.Models.Loans.Fakes.StubLoanApplication.DocumentsSetICollectionOfDocument">
            <summary>Sets the stub of LoanApplication.set_Documents(ICollection`1&lt;Document&gt; value)</summary>
        </member>
        <member name="M:Domain.Models.Loans.Fakes.StubLoanApplication.InitializeStub">
            <summary>Initializes a new instance of type StubLoanApplication</summary>
        </member>
        <member name="F:Domain.Models.Loans.Fakes.StubLoanApplication.TariffGet">
            <summary>Sets the stub of LoanApplication.get_Tariff()</summary>
        </member>
        <member name="F:Domain.Models.Loans.Fakes.StubLoanApplication.TariffSetTariff">
            <summary>Sets the stub of LoanApplication.set_Tariff(Tariff value)</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.StubLoanApplication.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.StubLoanApplication.Documents">
            <summary>Sets the stub of LoanApplication.get_Documents()</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.StubLoanApplication.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.StubLoanApplication.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.StubLoanApplication.Tariff">
            <summary>Sets the stub of LoanApplication.get_Tariff()</summary>
        </member>
        <member name="T:Domain.Models.Loans.Fakes.StubPayment">
            <summary>Stub type of Domain.Models.Loans.Payment</summary>
        </member>
        <member name="M:Domain.Models.Loans.Fakes.StubPayment.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Domain.Models.Loans.Fakes.StubPayment.InitializeStub">
            <summary>Initializes a new instance of type StubPayment</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.StubPayment.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.StubPayment.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.StubPayment.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Domain.Models.Loans.Fakes.StubPaymentSchedule">
            <summary>Stub type of Domain.Models.Loans.PaymentSchedule</summary>
        </member>
        <member name="M:Domain.Models.Loans.Fakes.StubPaymentSchedule.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Domain.Models.Loans.Fakes.StubPaymentSchedule.InitializeStub">
            <summary>Initializes a new instance of type StubPaymentSchedule</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.StubPaymentSchedule.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.StubPaymentSchedule.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.StubPaymentSchedule.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Domain.Models.Loans.Fakes.StubTariff">
            <summary>Stub type of Domain.Models.Loans.Tariff</summary>
        </member>
        <member name="M:Domain.Models.Loans.Fakes.StubTariff.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Domain.Models.Loans.Fakes.StubTariff.InitializeStub">
            <summary>Initializes a new instance of type StubTariff</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.StubTariff.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.StubTariff.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Domain.Models.Loans.Fakes.StubTariff.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Domain.Models.Users.Fakes.ShimEmployee">
            <summary>Shim type of Domain.Models.Users.Employee</summary>
        </member>
        <member name="M:Domain.Models.Users.Fakes.ShimEmployee.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Domain.Models.Users.Fakes.ShimEmployee.#ctor(Domain.Models.Users.Employee)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Domain.Models.Users.Fakes.ShimEmployee.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Domain.Models.Users.Fakes.ShimEmployee.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Domain.Models.Users.Fakes.ShimEmployee.Bind(Microsoft.AspNet.Identity.IUser)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Domain.Models.Users.Fakes.ShimEmployee.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Domain.Models.Users.Fakes.ShimEmployee.Constructor">
            <summary>Sets the shim of Employee.Employee()</summary>
        </member>
        <member name="P:Domain.Models.Users.Fakes.ShimEmployee.EmployeeRoleGet">
            <summary>Sets the shim of Employee.get_EmployeeRole()</summary>
        </member>
        <member name="P:Domain.Models.Users.Fakes.ShimEmployee.EmployeeRoleSetEmployeeRole">
            <summary>Sets the shim of Employee.set_EmployeeRole(EmployeeRole value)</summary>
        </member>
        <member name="P:Domain.Models.Users.Fakes.ShimEmployee.FiredOnGet">
            <summary>Sets the shim of Employee.get_FiredOn()</summary>
        </member>
        <member name="P:Domain.Models.Users.Fakes.ShimEmployee.FiredOnSetNullableOfDateTime">
            <summary>Sets the shim of Employee.set_FiredOn(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Domain.Models.Users.Fakes.ShimEmployee.FirstNameGet">
            <summary>Sets the shim of Employee.get_FirstName()</summary>
        </member>
        <member name="P:Domain.Models.Users.Fakes.ShimEmployee.FirstNameSetString">
            <summary>Sets the shim of Employee.set_FirstName(String value)</summary>
        </member>
        <member name="P:Domain.Models.Users.Fakes.ShimEmployee.HiredOnGet">
            <summary>Sets the shim of Employee.get_HiredOn()</summary>
        </member>
        <member name="P:Domain.Models.Users.Fakes.ShimEmployee.HiredOnSetNullableOfDateTime">
            <summary>Sets the shim of Employee.set_HiredOn(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Domain.Models.Users.Fakes.ShimEmployee.LastNameGet">
            <summary>Sets the shim of Employee.get_LastName()</summary>
        </member>
        <member name="P:Domain.Models.Users.Fakes.ShimEmployee.LastNameSetString">
            <summary>Sets the shim of Employee.set_LastName(String value)</summary>
        </member>
        <member name="P:Domain.Models.Users.Fakes.ShimEmployee.MiddleNameGet">
            <summary>Sets the shim of Employee.get_MiddleName()</summary>
        </member>
        <member name="P:Domain.Models.Users.Fakes.ShimEmployee.MiddleNameSetString">
            <summary>Sets the shim of Employee.set_MiddleName(String value)</summary>
        </member>
        <member name="T:Domain.Models.Users.Fakes.ShimEmployee.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Domain.Models.Users.Fakes.ShimEmployee.AllInstances.EmployeeRoleGet">
            <summary>Sets the shim of Employee.get_EmployeeRole()</summary>
        </member>
        <member name="P:Domain.Models.Users.Fakes.ShimEmployee.AllInstances.EmployeeRoleSetEmployeeRole">
            <summary>Sets the shim of Employee.set_EmployeeRole(EmployeeRole value)</summary>
        </member>
        <member name="P:Domain.Models.Users.Fakes.ShimEmployee.AllInstances.FiredOnGet">
            <summary>Sets the shim of Employee.get_FiredOn()</summary>
        </member>
        <member name="P:Domain.Models.Users.Fakes.ShimEmployee.AllInstances.FiredOnSetNullableOfDateTime">
            <summary>Sets the shim of Employee.set_FiredOn(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Domain.Models.Users.Fakes.ShimEmployee.AllInstances.FirstNameGet">
            <summary>Sets the shim of Employee.get_FirstName()</summary>
        </member>
        <member name="P:Domain.Models.Users.Fakes.ShimEmployee.AllInstances.FirstNameSetString">
            <summary>Sets the shim of Employee.set_FirstName(String value)</summary>
        </member>
        <member name="P:Domain.Models.Users.Fakes.ShimEmployee.AllInstances.HiredOnGet">
            <summary>Sets the shim of Employee.get_HiredOn()</summary>
        </member>
        <member name="P:Domain.Models.Users.Fakes.ShimEmployee.AllInstances.HiredOnSetNullableOfDateTime">
            <summary>Sets the shim of Employee.set_HiredOn(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Domain.Models.Users.Fakes.ShimEmployee.AllInstances.LastNameGet">
            <summary>Sets the shim of Employee.get_LastName()</summary>
        </member>
        <member name="P:Domain.Models.Users.Fakes.ShimEmployee.AllInstances.LastNameSetString">
            <summary>Sets the shim of Employee.set_LastName(String value)</summary>
        </member>
        <member name="P:Domain.Models.Users.Fakes.ShimEmployee.AllInstances.MiddleNameGet">
            <summary>Sets the shim of Employee.get_MiddleName()</summary>
        </member>
        <member name="P:Domain.Models.Users.Fakes.ShimEmployee.AllInstances.MiddleNameSetString">
            <summary>Sets the shim of Employee.set_MiddleName(String value)</summary>
        </member>
        <member name="T:Domain.Models.Users.Fakes.StubEmployee">
            <summary>Stub type of Domain.Models.Users.Employee</summary>
        </member>
        <member name="M:Domain.Models.Users.Fakes.StubEmployee.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Domain.Models.Users.Fakes.StubEmployee.AttachBackingFieldToId">
            <summary>Attaches delegates to emulate StubEmployee.Id as a property with a backing field.</summary>
        </member>
        <member name="M:Domain.Models.Users.Fakes.StubEmployee.AttachBackingFieldToPasswordHash">
            <summary>Attaches delegates to emulate StubEmployee.PasswordHash as a property with a backing field.</summary>
        </member>
        <member name="M:Domain.Models.Users.Fakes.StubEmployee.AttachBackingFieldToSecurityStamp">
            <summary>Attaches delegates to emulate StubEmployee.SecurityStamp as a property with a backing field.</summary>
        </member>
        <member name="M:Domain.Models.Users.Fakes.StubEmployee.AttachBackingFieldToUserName">
            <summary>Attaches delegates to emulate StubEmployee.UserName as a property with a backing field.</summary>
        </member>
        <member name="F:Domain.Models.Users.Fakes.StubEmployee.IdGet">
            <summary>Sets the stub of IdentityUser.get_Id()</summary>
        </member>
        <member name="F:Domain.Models.Users.Fakes.StubEmployee.IdSetString">
            <summary>Sets the stub of IdentityUser.set_Id(String value)</summary>
        </member>
        <member name="M:Domain.Models.Users.Fakes.StubEmployee.InitializeStub">
            <summary>Initializes a new instance of type StubEmployee</summary>
        </member>
        <member name="F:Domain.Models.Users.Fakes.StubEmployee.PasswordHashGet">
            <summary>Sets the stub of IdentityUser.get_PasswordHash()</summary>
        </member>
        <member name="F:Domain.Models.Users.Fakes.StubEmployee.PasswordHashSetString">
            <summary>Sets the stub of IdentityUser.set_PasswordHash(String value)</summary>
        </member>
        <member name="F:Domain.Models.Users.Fakes.StubEmployee.SecurityStampGet">
            <summary>Sets the stub of IdentityUser.get_SecurityStamp()</summary>
        </member>
        <member name="F:Domain.Models.Users.Fakes.StubEmployee.SecurityStampSetString">
            <summary>Sets the stub of IdentityUser.set_SecurityStamp(String value)</summary>
        </member>
        <member name="F:Domain.Models.Users.Fakes.StubEmployee.UserNameGet">
            <summary>Sets the stub of IdentityUser.get_UserName()</summary>
        </member>
        <member name="F:Domain.Models.Users.Fakes.StubEmployee.UserNameSetString">
            <summary>Sets the stub of IdentityUser.set_UserName(String value)</summary>
        </member>
        <member name="P:Domain.Models.Users.Fakes.StubEmployee.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Domain.Models.Users.Fakes.StubEmployee.Id">
            <summary>Sets the stub of IdentityUser.get_Id()</summary>
        </member>
        <member name="P:Domain.Models.Users.Fakes.StubEmployee.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Domain.Models.Users.Fakes.StubEmployee.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Domain.Models.Users.Fakes.StubEmployee.PasswordHash">
            <summary>Sets the stub of IdentityUser.get_PasswordHash()</summary>
        </member>
        <member name="P:Domain.Models.Users.Fakes.StubEmployee.SecurityStamp">
            <summary>Sets the stub of IdentityUser.get_SecurityStamp()</summary>
        </member>
        <member name="P:Domain.Models.Users.Fakes.StubEmployee.UserName">
            <summary>Sets the stub of IdentityUser.get_UserName()</summary>
        </member>
        <member name="T:Domain.Repositories.Fakes.ShimAccountRepository">
            <summary>Shim type of Domain.Repositories.AccountRepository</summary>
        </member>
        <member name="M:Domain.Repositories.Fakes.ShimAccountRepository.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Domain.Repositories.Fakes.ShimAccountRepository.#ctor(Domain.Repositories.AccountRepository)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Domain.Repositories.Fakes.ShimAccountRepository.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Domain.Repositories.Fakes.ShimAccountRepository.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Domain.Repositories.Fakes.ShimAccountRepository.AddEntryAccountEntry">
            <summary>Sets the shim of AccountRepository.AddEntry(Account account, Entry entry)</summary>
        </member>
        <member name="P:Domain.Repositories.Fakes.ShimAccountRepository.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Domain.Repositories.Fakes.ShimAccountRepository.CloseAccountAccount">
            <summary>Sets the shim of AccountRepository.CloseAccount(Account account)</summary>
        </member>
        <member name="P:Domain.Repositories.Fakes.ShimAccountRepository.ConstructorDataContext">
            <summary>Sets the shim of AccountRepository.AccountRepository(DataContext context)</summary>
        </member>
        <member name="P:Domain.Repositories.Fakes.ShimAccountRepository.ContextGet">
            <summary>Sets the shim of AccountRepository.get_Context()</summary>
        </member>
        <member name="P:Domain.Repositories.Fakes.ShimAccountRepository.ContextSetDataContext">
            <summary>Sets the shim of AccountRepository.set_Context(DataContext value)</summary>
        </member>
        <member name="P:Domain.Repositories.Fakes.ShimAccountRepository.CreateAccountCurrencyAccountType">
            <summary>Sets the shim of AccountRepository.CreateAccount(Currency currency, AccountType accountType)</summary>
        </member>
        <member name="T:Domain.Repositories.Fakes.ShimAccountRepository.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Domain.Repositories.Fakes.ShimAccountRepository.AllInstances.AddEntryAccountEntry">
            <summary>Sets the shim of AccountRepository.AddEntry(Account account, Entry entry)</summary>
        </member>
        <member name="P:Domain.Repositories.Fakes.ShimAccountRepository.AllInstances.CloseAccountAccount">
            <summary>Sets the shim of AccountRepository.CloseAccount(Account account)</summary>
        </member>
        <member name="P:Domain.Repositories.Fakes.ShimAccountRepository.AllInstances.ContextGet">
            <summary>Sets the shim of AccountRepository.get_Context()</summary>
        </member>
        <member name="P:Domain.Repositories.Fakes.ShimAccountRepository.AllInstances.ContextSetDataContext">
            <summary>Sets the shim of AccountRepository.set_Context(DataContext value)</summary>
        </member>
        <member name="P:Domain.Repositories.Fakes.ShimAccountRepository.AllInstances.CreateAccountCurrencyAccountType">
            <summary>Sets the shim of AccountRepository.CreateAccount(Currency currency, AccountType accountType)</summary>
        </member>
        <member name="T:Domain.Repositories.Fakes.ShimCalendarService">
            <summary>Shim type of Domain.Repositories.CalendarService</summary>
        </member>
        <member name="M:Domain.Repositories.Fakes.ShimCalendarService.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Domain.Repositories.Fakes.ShimCalendarService.#ctor(Domain.Repositories.CalendarService)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Domain.Repositories.Fakes.ShimCalendarService.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Domain.Repositories.Fakes.ShimCalendarService.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Domain.Repositories.Fakes.ShimCalendarService.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Domain.Repositories.Fakes.ShimCalendarService.CalendarGet">
            <summary>Sets the shim of CalendarService.get_Calendar()</summary>
        </member>
        <member name="P:Domain.Repositories.Fakes.ShimCalendarService.ConstructorDataContext">
            <summary>Sets the shim of CalendarService.CalendarService(DataContext context)</summary>
        </member>
        <member name="P:Domain.Repositories.Fakes.ShimCalendarService.ContextGet">
            <summary>Sets the shim of CalendarService.get_Context()</summary>
        </member>
        <member name="P:Domain.Repositories.Fakes.ShimCalendarService.ContextSetDataContext">
            <summary>Sets the shim of CalendarService.set_Context(DataContext value)</summary>
        </member>
        <member name="P:Domain.Repositories.Fakes.ShimCalendarService.MoveTimeByte">
            <summary>Sets the shim of CalendarService.MoveTime(Byte days)</summary>
        </member>
        <member name="P:Domain.Repositories.Fakes.ShimCalendarService.SetCurrentDateDateTime">
            <summary>Sets the shim of CalendarService.SetCurrentDate(DateTime dateTime)</summary>
        </member>
        <member name="P:Domain.Repositories.Fakes.ShimCalendarService.UpdateDailyProcessingTime">
            <summary>Sets the shim of CalendarService.UpdateDailyProcessingTime()</summary>
        </member>
        <member name="P:Domain.Repositories.Fakes.ShimCalendarService.UpdateMonthlyProcessingTime">
            <summary>Sets the shim of CalendarService.UpdateMonthlyProcessingTime()</summary>
        </member>
        <member name="T:Domain.Repositories.Fakes.ShimCalendarService.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Domain.Repositories.Fakes.ShimCalendarService.AllInstances.CalendarGet">
            <summary>Sets the shim of CalendarService.get_Calendar()</summary>
        </member>
        <member name="P:Domain.Repositories.Fakes.ShimCalendarService.AllInstances.ContextGet">
            <summary>Sets the shim of CalendarService.get_Context()</summary>
        </member>
        <member name="P:Domain.Repositories.Fakes.ShimCalendarService.AllInstances.ContextSetDataContext">
            <summary>Sets the shim of CalendarService.set_Context(DataContext value)</summary>
        </member>
        <member name="P:Domain.Repositories.Fakes.ShimCalendarService.AllInstances.MoveTimeByte">
            <summary>Sets the shim of CalendarService.MoveTime(Byte days)</summary>
        </member>
        <member name="P:Domain.Repositories.Fakes.ShimCalendarService.AllInstances.SetCurrentDateDateTime">
            <summary>Sets the shim of CalendarService.SetCurrentDate(DateTime dateTime)</summary>
        </member>
        <member name="P:Domain.Repositories.Fakes.ShimCalendarService.AllInstances.UpdateDailyProcessingTime">
            <summary>Sets the shim of CalendarService.UpdateDailyProcessingTime()</summary>
        </member>
        <member name="P:Domain.Repositories.Fakes.ShimCalendarService.AllInstances.UpdateMonthlyProcessingTime">
            <summary>Sets the shim of CalendarService.UpdateMonthlyProcessingTime()</summary>
        </member>
        <member name="T:Domain.Repositories.Fakes.ShimLoanRepository">
            <summary>Shim type of Domain.Repositories.LoanRepository</summary>
        </member>
        <member name="M:Domain.Repositories.Fakes.ShimLoanRepository.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Domain.Repositories.Fakes.ShimLoanRepository.#ctor(Domain.Repositories.LoanRepository)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Domain.Repositories.Fakes.ShimLoanRepository.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Domain.Repositories.Fakes.ShimLoanRepository.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Domain.Repositories.Fakes.ShimLoanRepository.AccountTypesGet">
            <summary>Sets the shim of LoanRepository.get_AccountTypes()</summary>
        </member>
        <member name="P:Domain.Repositories.Fakes.ShimLoanRepository.ApproveLoanAppicationLoanApplication">
            <summary>Sets the shim of LoanRepository.ApproveLoanAppication(LoanApplication loanApplication)</summary>
        </member>
        <member name="P:Domain.Repositories.Fakes.ShimLoanRepository.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Domain.Repositories.Fakes.ShimLoanRepository.CanLoanBeClosedLoan">
            <summary>Sets the shim of LoanRepository.CanLoanBeClosed(Loan loan)</summary>
        </member>
        <member name="P:Domain.Repositories.Fakes.ShimLoanRepository.CloseLoanLoan">
            <summary>Sets the shim of LoanRepository.CloseLoan(Loan loan)</summary>
        </member>
        <member name="P:Domain.Repositories.Fakes.ShimLoanRepository.ConsiderLoanApplicationLoanApplicationBoolean">
            <summary>Sets the shim of LoanRepository.ConsiderLoanApplication(LoanApplication loanApplication, Boolean decision)</summary>
        </member>
        <member name="P:Domain.Repositories.Fakes.ShimLoanRepository.ConstructorDataContext">
            <summary>Sets the shim of LoanRepository.LoanRepository(DataContext context)</summary>
        </member>
        <member name="P:Domain.Repositories.Fakes.ShimLoanRepository.CreateLoanApplicationLoanApplication">
            <summary>Sets the shim of LoanRepository.CreateLoanApplication(LoanApplication loanApplication)</summary>
        </member>
        <member name="P:Domain.Repositories.Fakes.ShimLoanRepository.DeleteLoanApplicationByIdGuid">
            <summary>Sets the shim of LoanRepository.DeleteLoanApplicationById(Guid id)</summary>
        </member>
        <member name="P:Domain.Repositories.Fakes.ShimLoanRepository.DeleteTariffByIdGuid">
            <summary>Sets the shim of LoanRepository.DeleteTariffById(Guid id)</summary>
        </member>
        <member name="P:Domain.Repositories.Fakes.ShimLoanRepository.GetLoanApplicationsFuncOfLoanApplicationBoolean">
            <summary>Sets the shim of LoanRepository.GetLoanApplications(Func`2&lt;LoanApplication,Boolean&gt; filter)</summary>
        </member>
        <member name="P:Domain.Repositories.Fakes.ShimLoanRepository.GetLoansFuncOfLoanBoolean">
            <summary>Sets the shim of LoanRepository.GetLoans(Func`2&lt;Loan,Boolean&gt; filter)</summary>
        </member>
        <member name="P:Domain.Repositories.Fakes.ShimLoanRepository.GetTariffsFuncOfTariffBoolean">
            <summary>Sets the shim of LoanRepository.GetTariffs(Func`2&lt;Tariff,Boolean&gt; filter)</summary>
        </member>
        <member name="P:Domain.Repositories.Fakes.ShimLoanRepository.RejectLoanApplicationLoanApplication">
            <summary>Sets the shim of LoanRepository.RejectLoanApplication(LoanApplication loanApplication)</summary>
        </member>
        <member name="P:Domain.Repositories.Fakes.ShimLoanRepository.StaticConstructor">
            <summary>Sets the shim of LoanRepository.LoanRepository()</summary>
        </member>
        <member name="P:Domain.Repositories.Fakes.ShimLoanRepository.UpsertLoanApplicationLoanApplication">
            <summary>Sets the shim of LoanRepository.UpsertLoanApplication(LoanApplication loanApplication)</summary>
        </member>
        <member name="P:Domain.Repositories.Fakes.ShimLoanRepository.UpsertLoanLoan">
            <summary>Sets the shim of LoanRepository.UpsertLoan(Loan loan)</summary>
        </member>
        <member name="P:Domain.Repositories.Fakes.ShimLoanRepository.UpsertTariffTariff">
            <summary>Sets the shim of LoanRepository.UpsertTariff(Tariff tariff)</summary>
        </member>
        <member name="P:Domain.Repositories.Fakes.ShimLoanRepository._CanLoanBeClosedb__0Account">
            <summary>Sets the shim of LoanRepository.&lt;CanLoanBeClosed&gt;b__0(Account a)</summary>
        </member>
        <member name="T:Domain.Repositories.Fakes.ShimLoanRepository.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Domain.Repositories.Fakes.ShimLoanRepository.AllInstances.ApproveLoanAppicationLoanApplication">
            <summary>Sets the shim of LoanRepository.ApproveLoanAppication(LoanApplication loanApplication)</summary>
        </member>
        <member name="P:Domain.Repositories.Fakes.ShimLoanRepository.AllInstances.CanLoanBeClosedLoan">
            <summary>Sets the shim of LoanRepository.CanLoanBeClosed(Loan loan)</summary>
        </member>
        <member name="P:Domain.Repositories.Fakes.ShimLoanRepository.AllInstances.CloseLoanLoan">
            <summary>Sets the shim of LoanRepository.CloseLoan(Loan loan)</summary>
        </member>
        <member name="P:Domain.Repositories.Fakes.ShimLoanRepository.AllInstances.ConsiderLoanApplicationLoanApplicationBoolean">
            <summary>Sets the shim of LoanRepository.ConsiderLoanApplication(LoanApplication loanApplication, Boolean decision)</summary>
        </member>
        <member name="P:Domain.Repositories.Fakes.ShimLoanRepository.AllInstances.CreateLoanApplicationLoanApplication">
            <summary>Sets the shim of LoanRepository.CreateLoanApplication(LoanApplication loanApplication)</summary>
        </member>
        <member name="P:Domain.Repositories.Fakes.ShimLoanRepository.AllInstances.DeleteLoanApplicationByIdGuid">
            <summary>Sets the shim of LoanRepository.DeleteLoanApplicationById(Guid id)</summary>
        </member>
        <member name="P:Domain.Repositories.Fakes.ShimLoanRepository.AllInstances.DeleteTariffByIdGuid">
            <summary>Sets the shim of LoanRepository.DeleteTariffById(Guid id)</summary>
        </member>
        <member name="P:Domain.Repositories.Fakes.ShimLoanRepository.AllInstances.GetLoanApplicationsFuncOfLoanApplicationBoolean">
            <summary>Sets the shim of LoanRepository.GetLoanApplications(Func`2&lt;LoanApplication,Boolean&gt; filter)</summary>
        </member>
        <member name="P:Domain.Repositories.Fakes.ShimLoanRepository.AllInstances.GetLoansFuncOfLoanBoolean">
            <summary>Sets the shim of LoanRepository.GetLoans(Func`2&lt;Loan,Boolean&gt; filter)</summary>
        </member>
        <member name="P:Domain.Repositories.Fakes.ShimLoanRepository.AllInstances.GetTariffsFuncOfTariffBoolean">
            <summary>Sets the shim of LoanRepository.GetTariffs(Func`2&lt;Tariff,Boolean&gt; filter)</summary>
        </member>
        <member name="P:Domain.Repositories.Fakes.ShimLoanRepository.AllInstances.RejectLoanApplicationLoanApplication">
            <summary>Sets the shim of LoanRepository.RejectLoanApplication(LoanApplication loanApplication)</summary>
        </member>
        <member name="P:Domain.Repositories.Fakes.ShimLoanRepository.AllInstances.UpsertLoanApplicationLoanApplication">
            <summary>Sets the shim of LoanRepository.UpsertLoanApplication(LoanApplication loanApplication)</summary>
        </member>
        <member name="P:Domain.Repositories.Fakes.ShimLoanRepository.AllInstances.UpsertLoanLoan">
            <summary>Sets the shim of LoanRepository.UpsertLoan(Loan loan)</summary>
        </member>
        <member name="P:Domain.Repositories.Fakes.ShimLoanRepository.AllInstances.UpsertTariffTariff">
            <summary>Sets the shim of LoanRepository.UpsertTariff(Tariff tariff)</summary>
        </member>
        <member name="T:Domain.Repositories.Fakes.StubAccountRepository">
            <summary>Stub type of Domain.Repositories.AccountRepository</summary>
        </member>
        <member name="M:Domain.Repositories.Fakes.StubAccountRepository.#ctor(Domain.DataContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Domain.Repositories.Fakes.StubAccountRepository.InitializeStub">
            <summary>Initializes a new instance of type StubAccountRepository</summary>
        </member>
        <member name="P:Domain.Repositories.Fakes.StubAccountRepository.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Domain.Repositories.Fakes.StubAccountRepository.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Domain.Repositories.Fakes.StubAccountRepository.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Domain.Repositories.Fakes.StubCalendarService">
            <summary>Stub type of Domain.Repositories.CalendarService</summary>
        </member>
        <member name="M:Domain.Repositories.Fakes.StubCalendarService.#ctor(Domain.DataContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Domain.Repositories.Fakes.StubCalendarService.InitializeStub">
            <summary>Initializes a new instance of type StubCalendarService</summary>
        </member>
        <member name="P:Domain.Repositories.Fakes.StubCalendarService.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Domain.Repositories.Fakes.StubCalendarService.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Domain.Repositories.Fakes.StubCalendarService.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Domain.Repositories.Fakes.StubLoanRepository">
            <summary>Stub type of Domain.Repositories.LoanRepository</summary>
        </member>
        <member name="M:Domain.Repositories.Fakes.StubLoanRepository.#ctor(Domain.DataContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Domain.Repositories.Fakes.StubLoanRepository.InitializeStub">
            <summary>Initializes a new instance of type StubLoanRepository</summary>
        </member>
        <member name="P:Domain.Repositories.Fakes.StubLoanRepository.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Domain.Repositories.Fakes.StubLoanRepository.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Domain.Repositories.Fakes.StubLoanRepository.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Infrastructure.Migrations.Fakes.ShimAddedCalendar">
            <summary>Shim type of Infrastructure.Migrations.AddedCalendar</summary>
        </member>
        <member name="M:Infrastructure.Migrations.Fakes.ShimAddedCalendar.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Infrastructure.Migrations.Fakes.ShimAddedCalendar.#ctor(Infrastructure.Migrations.AddedCalendar)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Infrastructure.Migrations.Fakes.ShimAddedCalendar.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Infrastructure.Migrations.Fakes.ShimAddedCalendar.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Infrastructure.Migrations.Fakes.ShimAddedCalendar.Bind(System.Data.Entity.Migrations.Infrastructure.IDbMigration)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Infrastructure.Migrations.Fakes.ShimAddedCalendar.Bind(System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Infrastructure.Migrations.Fakes.ShimAddedCalendar.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Infrastructure.Migrations.Fakes.ShimAddedCalendar.Constructor">
            <summary>Sets the shim of AddedCalendar.AddedCalendar()</summary>
        </member>
        <member name="P:Infrastructure.Migrations.Fakes.ShimAddedCalendar.Down">
            <summary>Sets the shim of AddedCalendar.Down()</summary>
        </member>
        <member name="P:Infrastructure.Migrations.Fakes.ShimAddedCalendar.IdSystemDataEntityMigrationsInfrastructureIMigrationMetadataget">
            <summary>Sets the shim of AddedCalendar.System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.get_Id()</summary>
        </member>
        <member name="P:Infrastructure.Migrations.Fakes.ShimAddedCalendar.SourceSystemDataEntityMigrationsInfrastructureIMigrationMetadataget">
            <summary>Sets the shim of AddedCalendar.System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.get_Source()</summary>
        </member>
        <member name="P:Infrastructure.Migrations.Fakes.ShimAddedCalendar.TargetSystemDataEntityMigrationsInfrastructureIMigrationMetadataget">
            <summary>Sets the shim of AddedCalendar.System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.get_Target()</summary>
        </member>
        <member name="P:Infrastructure.Migrations.Fakes.ShimAddedCalendar.Up">
            <summary>Sets the shim of AddedCalendar.Up()</summary>
        </member>
        <member name="T:Infrastructure.Migrations.Fakes.ShimAddedCalendar.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Infrastructure.Migrations.Fakes.ShimAddedCalendar.AllInstances.Down">
            <summary>Sets the shim of AddedCalendar.Down()</summary>
        </member>
        <member name="P:Infrastructure.Migrations.Fakes.ShimAddedCalendar.AllInstances.IdSystemDataEntityMigrationsInfrastructureIMigrationMetadataget">
            <summary>Sets the shim of AddedCalendar.System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.get_Id()</summary>
        </member>
        <member name="P:Infrastructure.Migrations.Fakes.ShimAddedCalendar.AllInstances.SourceSystemDataEntityMigrationsInfrastructureIMigrationMetadataget">
            <summary>Sets the shim of AddedCalendar.System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.get_Source()</summary>
        </member>
        <member name="P:Infrastructure.Migrations.Fakes.ShimAddedCalendar.AllInstances.TargetSystemDataEntityMigrationsInfrastructureIMigrationMetadataget">
            <summary>Sets the shim of AddedCalendar.System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.get_Target()</summary>
        </member>
        <member name="P:Infrastructure.Migrations.Fakes.ShimAddedCalendar.AllInstances.Up">
            <summary>Sets the shim of AddedCalendar.Up()</summary>
        </member>
        <member name="T:Infrastructure.Migrations.Fakes.ShimAddedTariffStartTime">
            <summary>Shim type of Infrastructure.Migrations.AddedTariffStartTime</summary>
        </member>
        <member name="M:Infrastructure.Migrations.Fakes.ShimAddedTariffStartTime.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Infrastructure.Migrations.Fakes.ShimAddedTariffStartTime.#ctor(Infrastructure.Migrations.AddedTariffStartTime)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Infrastructure.Migrations.Fakes.ShimAddedTariffStartTime.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Infrastructure.Migrations.Fakes.ShimAddedTariffStartTime.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Infrastructure.Migrations.Fakes.ShimAddedTariffStartTime.Bind(System.Data.Entity.Migrations.Infrastructure.IDbMigration)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Infrastructure.Migrations.Fakes.ShimAddedTariffStartTime.Bind(System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Infrastructure.Migrations.Fakes.ShimAddedTariffStartTime.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Infrastructure.Migrations.Fakes.ShimAddedTariffStartTime.Constructor">
            <summary>Sets the shim of AddedTariffStartTime.AddedTariffStartTime()</summary>
        </member>
        <member name="P:Infrastructure.Migrations.Fakes.ShimAddedTariffStartTime.Down">
            <summary>Sets the shim of AddedTariffStartTime.Down()</summary>
        </member>
        <member name="P:Infrastructure.Migrations.Fakes.ShimAddedTariffStartTime.IdSystemDataEntityMigrationsInfrastructureIMigrationMetadataget">
            <summary>Sets the shim of AddedTariffStartTime.System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.get_Id()</summary>
        </member>
        <member name="P:Infrastructure.Migrations.Fakes.ShimAddedTariffStartTime.SourceSystemDataEntityMigrationsInfrastructureIMigrationMetadataget">
            <summary>Sets the shim of AddedTariffStartTime.System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.get_Source()</summary>
        </member>
        <member name="P:Infrastructure.Migrations.Fakes.ShimAddedTariffStartTime.TargetSystemDataEntityMigrationsInfrastructureIMigrationMetadataget">
            <summary>Sets the shim of AddedTariffStartTime.System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.get_Target()</summary>
        </member>
        <member name="P:Infrastructure.Migrations.Fakes.ShimAddedTariffStartTime.Up">
            <summary>Sets the shim of AddedTariffStartTime.Up()</summary>
        </member>
        <member name="P:Infrastructure.Migrations.Fakes.ShimAddedTariffStartTime._Upb__0ColumnBuilder">
            <summary>Sets the shim of AddedTariffStartTime.&lt;Up&gt;b__0(ColumnBuilder c)</summary>
        </member>
        <member name="T:Infrastructure.Migrations.Fakes.ShimAddedTariffStartTime.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Infrastructure.Migrations.Fakes.ShimAddedTariffStartTime.AllInstances.Down">
            <summary>Sets the shim of AddedTariffStartTime.Down()</summary>
        </member>
        <member name="P:Infrastructure.Migrations.Fakes.ShimAddedTariffStartTime.AllInstances.IdSystemDataEntityMigrationsInfrastructureIMigrationMetadataget">
            <summary>Sets the shim of AddedTariffStartTime.System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.get_Id()</summary>
        </member>
        <member name="P:Infrastructure.Migrations.Fakes.ShimAddedTariffStartTime.AllInstances.SourceSystemDataEntityMigrationsInfrastructureIMigrationMetadataget">
            <summary>Sets the shim of AddedTariffStartTime.System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.get_Source()</summary>
        </member>
        <member name="P:Infrastructure.Migrations.Fakes.ShimAddedTariffStartTime.AllInstances.TargetSystemDataEntityMigrationsInfrastructureIMigrationMetadataget">
            <summary>Sets the shim of AddedTariffStartTime.System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.get_Target()</summary>
        </member>
        <member name="P:Infrastructure.Migrations.Fakes.ShimAddedTariffStartTime.AllInstances.Up">
            <summary>Sets the shim of AddedTariffStartTime.Up()</summary>
        </member>
        <member name="T:Infrastructure.Migrations.Fakes.ShimInit">
            <summary>Shim type of Infrastructure.Migrations.Init</summary>
        </member>
        <member name="M:Infrastructure.Migrations.Fakes.ShimInit.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Infrastructure.Migrations.Fakes.ShimInit.#ctor(Infrastructure.Migrations.Init)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Infrastructure.Migrations.Fakes.ShimInit.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Infrastructure.Migrations.Fakes.ShimInit.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Infrastructure.Migrations.Fakes.ShimInit.Bind(System.Data.Entity.Migrations.Infrastructure.IDbMigration)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Infrastructure.Migrations.Fakes.ShimInit.Bind(System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Infrastructure.Migrations.Fakes.ShimInit.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Infrastructure.Migrations.Fakes.ShimInit.Constructor">
            <summary>Sets the shim of Init.Init()</summary>
        </member>
        <member name="P:Infrastructure.Migrations.Fakes.ShimInit.Down">
            <summary>Sets the shim of Init.Down()</summary>
        </member>
        <member name="P:Infrastructure.Migrations.Fakes.ShimInit.IdSystemDataEntityMigrationsInfrastructureIMigrationMetadataget">
            <summary>Sets the shim of Init.System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.get_Id()</summary>
        </member>
        <member name="P:Infrastructure.Migrations.Fakes.ShimInit.SourceSystemDataEntityMigrationsInfrastructureIMigrationMetadataget">
            <summary>Sets the shim of Init.System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.get_Source()</summary>
        </member>
        <member name="P:Infrastructure.Migrations.Fakes.ShimInit.TargetSystemDataEntityMigrationsInfrastructureIMigrationMetadataget">
            <summary>Sets the shim of Init.System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.get_Target()</summary>
        </member>
        <member name="P:Infrastructure.Migrations.Fakes.ShimInit.Up">
            <summary>Sets the shim of Init.Up()</summary>
        </member>
        <member name="T:Infrastructure.Migrations.Fakes.ShimInit.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Infrastructure.Migrations.Fakes.ShimInit.AllInstances.Down">
            <summary>Sets the shim of Init.Down()</summary>
        </member>
        <member name="P:Infrastructure.Migrations.Fakes.ShimInit.AllInstances.IdSystemDataEntityMigrationsInfrastructureIMigrationMetadataget">
            <summary>Sets the shim of Init.System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.get_Id()</summary>
        </member>
        <member name="P:Infrastructure.Migrations.Fakes.ShimInit.AllInstances.SourceSystemDataEntityMigrationsInfrastructureIMigrationMetadataget">
            <summary>Sets the shim of Init.System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.get_Source()</summary>
        </member>
        <member name="P:Infrastructure.Migrations.Fakes.ShimInit.AllInstances.TargetSystemDataEntityMigrationsInfrastructureIMigrationMetadataget">
            <summary>Sets the shim of Init.System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.get_Target()</summary>
        </member>
        <member name="P:Infrastructure.Migrations.Fakes.ShimInit.AllInstances.Up">
            <summary>Sets the shim of Init.Up()</summary>
        </member>
        <member name="T:Infrastructure.Migrations.Fakes.ShimRemovedIsSecondaryDocNeededFromLoanApplication">
            <summary>Shim type of Infrastructure.Migrations.RemovedIsSecondaryDocNeededFromLoanApplication</summary>
        </member>
        <member name="M:Infrastructure.Migrations.Fakes.ShimRemovedIsSecondaryDocNeededFromLoanApplication.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Infrastructure.Migrations.Fakes.ShimRemovedIsSecondaryDocNeededFromLoanApplication.#ctor(Infrastructure.Migrations.RemovedIsSecondaryDocNeededFromLoanApplication)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Infrastructure.Migrations.Fakes.ShimRemovedIsSecondaryDocNeededFromLoanApplication.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Infrastructure.Migrations.Fakes.ShimRemovedIsSecondaryDocNeededFromLoanApplication.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Infrastructure.Migrations.Fakes.ShimRemovedIsSecondaryDocNeededFromLoanApplication.Bind(System.Data.Entity.Migrations.Infrastructure.IDbMigration)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Infrastructure.Migrations.Fakes.ShimRemovedIsSecondaryDocNeededFromLoanApplication.Bind(System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Infrastructure.Migrations.Fakes.ShimRemovedIsSecondaryDocNeededFromLoanApplication.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Infrastructure.Migrations.Fakes.ShimRemovedIsSecondaryDocNeededFromLoanApplication.Constructor">
            <summary>Sets the shim of RemovedIsSecondaryDocNeededFromLoanApplication.RemovedIsSecondaryDocNeededFromLoanApplication()</summary>
        </member>
        <member name="P:Infrastructure.Migrations.Fakes.ShimRemovedIsSecondaryDocNeededFromLoanApplication.Down">
            <summary>Sets the shim of RemovedIsSecondaryDocNeededFromLoanApplication.Down()</summary>
        </member>
        <member name="P:Infrastructure.Migrations.Fakes.ShimRemovedIsSecondaryDocNeededFromLoanApplication.IdSystemDataEntityMigrationsInfrastructureIMigrationMetadataget">
            <summary>Sets the shim of RemovedIsSecondaryDocNeededFromLoanApplication.System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.get_Id()</summary>
        </member>
        <member name="P:Infrastructure.Migrations.Fakes.ShimRemovedIsSecondaryDocNeededFromLoanApplication.SourceSystemDataEntityMigrationsInfrastructureIMigrationMetadataget">
            <summary>Sets the shim of RemovedIsSecondaryDocNeededFromLoanApplication.System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.get_Source()</summary>
        </member>
        <member name="P:Infrastructure.Migrations.Fakes.ShimRemovedIsSecondaryDocNeededFromLoanApplication.TargetSystemDataEntityMigrationsInfrastructureIMigrationMetadataget">
            <summary>Sets the shim of RemovedIsSecondaryDocNeededFromLoanApplication.System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.get_Target()</summary>
        </member>
        <member name="P:Infrastructure.Migrations.Fakes.ShimRemovedIsSecondaryDocNeededFromLoanApplication.Up">
            <summary>Sets the shim of RemovedIsSecondaryDocNeededFromLoanApplication.Up()</summary>
        </member>
        <member name="P:Infrastructure.Migrations.Fakes.ShimRemovedIsSecondaryDocNeededFromLoanApplication._Downb__0ColumnBuilder">
            <summary>Sets the shim of RemovedIsSecondaryDocNeededFromLoanApplication.&lt;Down&gt;b__0(ColumnBuilder c)</summary>
        </member>
        <member name="T:Infrastructure.Migrations.Fakes.ShimRemovedIsSecondaryDocNeededFromLoanApplication.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Infrastructure.Migrations.Fakes.ShimRemovedIsSecondaryDocNeededFromLoanApplication.AllInstances.Down">
            <summary>Sets the shim of RemovedIsSecondaryDocNeededFromLoanApplication.Down()</summary>
        </member>
        <member name="P:Infrastructure.Migrations.Fakes.ShimRemovedIsSecondaryDocNeededFromLoanApplication.AllInstances.IdSystemDataEntityMigrationsInfrastructureIMigrationMetadataget">
            <summary>Sets the shim of RemovedIsSecondaryDocNeededFromLoanApplication.System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.get_Id()</summary>
        </member>
        <member name="P:Infrastructure.Migrations.Fakes.ShimRemovedIsSecondaryDocNeededFromLoanApplication.AllInstances.SourceSystemDataEntityMigrationsInfrastructureIMigrationMetadataget">
            <summary>Sets the shim of RemovedIsSecondaryDocNeededFromLoanApplication.System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.get_Source()</summary>
        </member>
        <member name="P:Infrastructure.Migrations.Fakes.ShimRemovedIsSecondaryDocNeededFromLoanApplication.AllInstances.TargetSystemDataEntityMigrationsInfrastructureIMigrationMetadataget">
            <summary>Sets the shim of RemovedIsSecondaryDocNeededFromLoanApplication.System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.get_Target()</summary>
        </member>
        <member name="P:Infrastructure.Migrations.Fakes.ShimRemovedIsSecondaryDocNeededFromLoanApplication.AllInstances.Up">
            <summary>Sets the shim of RemovedIsSecondaryDocNeededFromLoanApplication.Up()</summary>
        </member>
        <member name="T:Infrastructure.Migrations.Fakes.ShimRemovedTariffIdFromLoanApplication">
            <summary>Shim type of Infrastructure.Migrations.RemovedTariffIdFromLoanApplication</summary>
        </member>
        <member name="M:Infrastructure.Migrations.Fakes.ShimRemovedTariffIdFromLoanApplication.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Infrastructure.Migrations.Fakes.ShimRemovedTariffIdFromLoanApplication.#ctor(Infrastructure.Migrations.RemovedTariffIdFromLoanApplication)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Infrastructure.Migrations.Fakes.ShimRemovedTariffIdFromLoanApplication.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Infrastructure.Migrations.Fakes.ShimRemovedTariffIdFromLoanApplication.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Infrastructure.Migrations.Fakes.ShimRemovedTariffIdFromLoanApplication.Bind(System.Data.Entity.Migrations.Infrastructure.IDbMigration)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Infrastructure.Migrations.Fakes.ShimRemovedTariffIdFromLoanApplication.Bind(System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Infrastructure.Migrations.Fakes.ShimRemovedTariffIdFromLoanApplication.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Infrastructure.Migrations.Fakes.ShimRemovedTariffIdFromLoanApplication.Constructor">
            <summary>Sets the shim of RemovedTariffIdFromLoanApplication.RemovedTariffIdFromLoanApplication()</summary>
        </member>
        <member name="P:Infrastructure.Migrations.Fakes.ShimRemovedTariffIdFromLoanApplication.Down">
            <summary>Sets the shim of RemovedTariffIdFromLoanApplication.Down()</summary>
        </member>
        <member name="P:Infrastructure.Migrations.Fakes.ShimRemovedTariffIdFromLoanApplication.IdSystemDataEntityMigrationsInfrastructureIMigrationMetadataget">
            <summary>Sets the shim of RemovedTariffIdFromLoanApplication.System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.get_Id()</summary>
        </member>
        <member name="P:Infrastructure.Migrations.Fakes.ShimRemovedTariffIdFromLoanApplication.SourceSystemDataEntityMigrationsInfrastructureIMigrationMetadataget">
            <summary>Sets the shim of RemovedTariffIdFromLoanApplication.System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.get_Source()</summary>
        </member>
        <member name="P:Infrastructure.Migrations.Fakes.ShimRemovedTariffIdFromLoanApplication.TargetSystemDataEntityMigrationsInfrastructureIMigrationMetadataget">
            <summary>Sets the shim of RemovedTariffIdFromLoanApplication.System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.get_Target()</summary>
        </member>
        <member name="P:Infrastructure.Migrations.Fakes.ShimRemovedTariffIdFromLoanApplication.Up">
            <summary>Sets the shim of RemovedTariffIdFromLoanApplication.Up()</summary>
        </member>
        <member name="T:Infrastructure.Migrations.Fakes.ShimRemovedTariffIdFromLoanApplication.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Infrastructure.Migrations.Fakes.ShimRemovedTariffIdFromLoanApplication.AllInstances.Down">
            <summary>Sets the shim of RemovedTariffIdFromLoanApplication.Down()</summary>
        </member>
        <member name="P:Infrastructure.Migrations.Fakes.ShimRemovedTariffIdFromLoanApplication.AllInstances.IdSystemDataEntityMigrationsInfrastructureIMigrationMetadataget">
            <summary>Sets the shim of RemovedTariffIdFromLoanApplication.System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.get_Id()</summary>
        </member>
        <member name="P:Infrastructure.Migrations.Fakes.ShimRemovedTariffIdFromLoanApplication.AllInstances.SourceSystemDataEntityMigrationsInfrastructureIMigrationMetadataget">
            <summary>Sets the shim of RemovedTariffIdFromLoanApplication.System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.get_Source()</summary>
        </member>
        <member name="P:Infrastructure.Migrations.Fakes.ShimRemovedTariffIdFromLoanApplication.AllInstances.TargetSystemDataEntityMigrationsInfrastructureIMigrationMetadataget">
            <summary>Sets the shim of RemovedTariffIdFromLoanApplication.System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.get_Target()</summary>
        </member>
        <member name="P:Infrastructure.Migrations.Fakes.ShimRemovedTariffIdFromLoanApplication.AllInstances.Up">
            <summary>Sets the shim of RemovedTariffIdFromLoanApplication.Up()</summary>
        </member>
        <member name="T:Infrastructure.Migrations.Fakes.ShimuserInLoan">
            <summary>Shim type of Infrastructure.Migrations.userInLoan</summary>
        </member>
        <member name="M:Infrastructure.Migrations.Fakes.ShimuserInLoan.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Infrastructure.Migrations.Fakes.ShimuserInLoan.#ctor(Infrastructure.Migrations.userInLoan)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Infrastructure.Migrations.Fakes.ShimuserInLoan.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Infrastructure.Migrations.Fakes.ShimuserInLoan.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Infrastructure.Migrations.Fakes.ShimuserInLoan.Bind(System.Data.Entity.Migrations.Infrastructure.IDbMigration)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Infrastructure.Migrations.Fakes.ShimuserInLoan.Bind(System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Infrastructure.Migrations.Fakes.ShimuserInLoan.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Infrastructure.Migrations.Fakes.ShimuserInLoan.Constructor">
            <summary>Sets the shim of userInLoan.userInLoan()</summary>
        </member>
        <member name="P:Infrastructure.Migrations.Fakes.ShimuserInLoan.Down">
            <summary>Sets the shim of userInLoan.Down()</summary>
        </member>
        <member name="P:Infrastructure.Migrations.Fakes.ShimuserInLoan.IdSystemDataEntityMigrationsInfrastructureIMigrationMetadataget">
            <summary>Sets the shim of userInLoan.System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.get_Id()</summary>
        </member>
        <member name="P:Infrastructure.Migrations.Fakes.ShimuserInLoan.SourceSystemDataEntityMigrationsInfrastructureIMigrationMetadataget">
            <summary>Sets the shim of userInLoan.System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.get_Source()</summary>
        </member>
        <member name="P:Infrastructure.Migrations.Fakes.ShimuserInLoan.TargetSystemDataEntityMigrationsInfrastructureIMigrationMetadataget">
            <summary>Sets the shim of userInLoan.System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.get_Target()</summary>
        </member>
        <member name="P:Infrastructure.Migrations.Fakes.ShimuserInLoan.Up">
            <summary>Sets the shim of userInLoan.Up()</summary>
        </member>
        <member name="P:Infrastructure.Migrations.Fakes.ShimuserInLoan._Upb__0ColumnBuilder">
            <summary>Sets the shim of userInLoan.&lt;Up&gt;b__0(ColumnBuilder c)</summary>
        </member>
        <member name="T:Infrastructure.Migrations.Fakes.ShimuserInLoan.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Infrastructure.Migrations.Fakes.ShimuserInLoan.AllInstances.Down">
            <summary>Sets the shim of userInLoan.Down()</summary>
        </member>
        <member name="P:Infrastructure.Migrations.Fakes.ShimuserInLoan.AllInstances.IdSystemDataEntityMigrationsInfrastructureIMigrationMetadataget">
            <summary>Sets the shim of userInLoan.System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.get_Id()</summary>
        </member>
        <member name="P:Infrastructure.Migrations.Fakes.ShimuserInLoan.AllInstances.SourceSystemDataEntityMigrationsInfrastructureIMigrationMetadataget">
            <summary>Sets the shim of userInLoan.System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.get_Source()</summary>
        </member>
        <member name="P:Infrastructure.Migrations.Fakes.ShimuserInLoan.AllInstances.TargetSystemDataEntityMigrationsInfrastructureIMigrationMetadataget">
            <summary>Sets the shim of userInLoan.System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.get_Target()</summary>
        </member>
        <member name="P:Infrastructure.Migrations.Fakes.ShimuserInLoan.AllInstances.Up">
            <summary>Sets the shim of userInLoan.Up()</summary>
        </member>
    </members>
</doc>
