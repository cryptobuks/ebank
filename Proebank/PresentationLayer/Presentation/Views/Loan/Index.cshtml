@using PagedList
@using PagedList.Mvc
@model IPagedList<Presentation.Models.LoanWithCustomerViewModel>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var isHead = User.IsInRole("Department head");
    var isConsultant = User.IsInRole("Consultant");
    var isSecurity = User.IsInRole("Security");
}
@section scripts{
    <script type="text/javascript">
        $('#loan-tab-' + '@ViewBag.ActiveTab'.toLowerCase()).addClass('active');
    </script>
}

<!DOCTYPE html>
<html>
<head>
    <title>Loans</title>
</head>
<body>
    <div>
        <h2>@ViewBag.ActiveTab Loans</h2>
        <ul class="nav nav-tabs">
            @if (isHead)
            {
                <li id="loan-tab-all"><a href="@Url.Action("All")"><i class="fa fa-file-text fa-2x"></i></a></li>
            }
            @if (isHead || isSecurity)
            {
                <li id="loan-tab-trouble"><a href="@Url.Action("InTrouble")"><i class="fa fa-warning fa-2x"></i></a></li>
            }
            @if (isHead || isConsultant)
            {
                <li id="loan-tab-active"><a href="@Url.Action("Active")"><i class="fa fa-play fa-2x"></i></a></li>
            }
            @if (isHead)
            {
                <li id="loan-tab-closed"><a href="@Url.Action("Closed")"><i class="fa fa-stop fa-2x"></i></a></li>
            }

            @{ var action = (string)ViewBag.ActiveTab;}
            @using (Html.BeginForm(action, "Loan", FormMethod.Get, new { @class = "form-inline" }))
            {
                <div style="float: right;">
                    <div class="form-group">
                        @Html.DropDownList("searchBy", (IEnumerable<SelectListItem>)ViewBag.SearchByList, "Searching By...", new { @style = "background: #15B5C1;" })
                    </div>
                    <div class="form-group">
                        @Html.TextBox("search")
                    </div>
                    <div class="form-group">
                        <input type="submit" value="Search" class="btn btn-default" />
                    </div>
                </div>
            }
        </ul>
        <table class="table">
            <tr>
                <th>
                    @Html.ActionLink("Customer", action, new { page = Request.QueryString["page"], searchBy = Request.QueryString["searchBy"], search = Request.QueryString["search"], sortBy = ViewBag.NextSortCustomerParameter })
                </th>
                <th>Identification number
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().Loan.Application.LoanAmount)
                </th>
                <th>
                    @Html.ActionLink("Tariff Name", action, new { page = Request.QueryString["page"], searchBy = Request.QueryString["searchBy"], search = Request.QueryString["search"], sortBy = ViewBag.NextSortTariffParameter })
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().Loan.Application.Term)
                </th>
                <th>
                    @Html.ActionLink("Is Closed", action, new { page = Request.QueryString["page"], searchBy = Request.QueryString["searchBy"], search = Request.QueryString["search"], sortBy = ViewBag.NextSortIsClosedParameter })
                </th>
                <th></th>
            </tr>
            @if (!Model.Any() && Request.QueryString.HasKeys())
            {
                <tr>
                    <td>No rows match</td>
                </tr>
            }
            else
            {

                foreach (var item in Model)
                {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Customer.PersonalData.LastName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Customer.PersonalData.Identification)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Loan.Application.Currency)
                        @Html.DisplayFor(modelItem => item.Loan.Application.LoanAmount)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Loan.Application.Tariff.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Loan.Application.Term)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Loan.IsClosed)
                    </td>
                    <td>
                        <a href="@Url.Action("Details", new { id = item.Loan.Id })" title="Details" class="btn btn-info btn-xs"><i class="fa fa-info fa-lg"></i></a>
                    </td>
                </tr>
                }
            }
        </table>
        @Html.PagedListPager(Model, page => Url.Action(ViewBag.ActiveTab, new { page, searchBy = Request.QueryString["searchBy"], search = Request.QueryString["search"], sortBy = Request.QueryString["sortBy"] }), new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded })
    </div>
</body>
</html>
