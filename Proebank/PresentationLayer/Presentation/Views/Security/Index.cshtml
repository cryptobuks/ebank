@using Domain.Enums
@model IEnumerable<Domain.Models.Loans.LoanApplication>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section scripts{
    <script type="text/javascript">
        $('#loan-application-tab-' + '@ViewBag.ActiveTab'.toLowerCase()).addClass('active');
    </script>
}

<h2>@ViewBag.ActiveTab Applications</h2>

<ul class="nav nav-tabs">
    <li id="loan-application-tab-underconsideration"><a href="@Url.Action("Index")">Need consideration</a></li>
</ul>

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Tariff.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LoanAmount)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TimeCreated)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TimeContracted)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Term)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CellPhone)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LoanPurpose)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Status)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Currency)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.IsRemoved)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Tariff.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.LoanAmount)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.TimeCreated)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.TimeContracted)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Term)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CellPhone)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.LoanPurpose)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Status)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Currency)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.IsRemoved)
        </td>
        <td>
                @*@switch (item.Status)
                {
                    case LoanApplicationStatus.New:
                        <a href="@Url.Action("Approve", new {id = item.Id})" title="Approve" class="btn btn-success btn-xs"><i class="fa fa-thumbs-up fa-lg"></i> Approve</a>
                        <a href="@Url.Action("Reject", new {id = item.Id})" title="Reject" class="btn btn-danger btn-xs"><i class="fa fa-minus-square fa-lg"></i> Reject</a>
                        @:|
                        break;
                    case LoanApplicationStatus.Approved:
                        <a href="@Url.Action("Contract", new {id = item.Id})" title="Contract" class="btn btn-info btn-xs"><i class="fa fa-star fa-lg"></i> Contract</a>
                        break;
                }*@
                <a href="@Url.Action("Details", new { id = item.Id })" title="Consider application" class="btn btn-default btn-xs"><i class="fa fa-info-circle fa-lg"></i></a>
            </td>
    </tr>
}

</table>
