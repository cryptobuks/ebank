@using Domain.Enums
@using Glimpse.Core.Extensions
@using PagedList
@using PagedList.Mvc
@using Domain.Models.Loans
@model IPagedList<Domain.Models.Loans.LoanApplication>

@{
    ViewBag.Title = @ViewBag.ActiveTab + " applications";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var isHead = User.Identity.IsAuthenticated && User.IsInRole("Department head");
}

@section scripts{
    <script type="text/javascript">
        $('#loan-application-tab-' + '@ViewBag.ActiveTab'.toLowerCase()).addClass('active');
    </script>
}

<h2>@ViewBag.ActiveTab Applications</h2>


@if (User.IsInRole("Consultant"))
{
    <hr/>
    <a href="@Url.Action("Create")" class="btn btn-success"><i class="fa fa-plus"></i> Create new</a>
}
<hr/>
<ul class="nav nav-tabs">
    @if (User.IsInRole("Consultant"))
    {
        <li id="loan-application-tab-new"><a href="@Url.Action("New")"><i class="fa fa-file-text fa-2x"></i></a></li>
        <li id="loan-application-tab-preapproved"><a href="@Url.Action("PreApproved")"><i class="fa fa-paperclip fa-2x"></i></a></li>
        <li id="loan-application-tab-reviewed"><a href="@Url.Action("Reviewed")"><i class="fa fa-print fa-2x"></i></a></li>
        @*<li id="loan-application-tab-contracted"><a href="@Url.Action("Contracted")"><i class="fa fa-briefcase fa-2x"></i></a></li>*@
    }
    else if (User.IsInRole("Security"))
    {
        <li id="loan-application-tab-security"><a href="@Url.Action("Security")"><i class="fa fa-lock fa-2x"></i></a></li>
    }
    else if (User.IsInRole("Credit committee"))
    {
        <li id="loan-application-tab-committee"><a href="@Url.Action("Committee")"><i class="fa fa-users fa-2x"></i></a></li>
    }
    else if (isHead)
    {
        <li id="loan-application-tab-all"><a href="@Url.Action("Index")"><i class="fa fa-globe fa-2x"></i></a></li>
        <li id="loan-application-tab-contracted"><a href="@Url.Action("Contracted")"><i class="fa fa-credit-card fa-2x"></i></a></li>
    }
</ul>

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.First().Tariff.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().LoanAmount)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().TimeCreated)
        </th>
        @if (isHead)
        {
            <th>
                @Html.DisplayNameFor(model => model.First().TimeContracted)
            </th>
        }
        <th>
            @Html.DisplayNameFor(model => model.First().Term)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().CellPhone)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().LoanPurpose)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Status)
        </th>
        <th></th>
    </tr>
    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Tariff.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Currency)
                @Html.DisplayFor(modelItem => item.LoanAmount)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TimeCreated)
            </td>
            @if (isHead)
            {
                <td>
                    @Html.DisplayFor(modelItem => item.TimeContracted)
                </td>
            }
            <td>
                @Html.DisplayFor(modelItem => item.Term) month(s)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CellPhone)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LoanPurpose)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Status)
            </td>
            <td>
                @switch (item.Status)
                {
                    case LoanApplicationStatus.New:
                        <a href="@Url.Action("Fill", new { id = item.Id })" title="Fill docs" class="btn btn-primary btn-xs"><i class="fa fa-paperclip fa-lg"></i> Fill docs</a>
                        break;
                    case LoanApplicationStatus.Filled:
                        <a href="@Url.Action("SendToSecurity", new { id = item.Id })" title="to security service" class="btn btn-default btn-xs"><i class="fa fa-lock fa-lg"></i> To security</a>
                        <a href="@Url.Action("Details", new { id = item.Id })" title="Details" class="btn btn-info btn-xs"><i class="fa fa-info fa-lg"></i></a>
                        @*<a href="@Url.Action("Edit", new { id = item.Id })" title="Edit" class="btn btn-default btn-xs"><i class="fa fa-pencil fa-lg"></i></a>*@
                        break;
                    case LoanApplicationStatus.UnderCommitteeConsideration:
                        if (ViewBag.ActiveTab == "Committee")
                        {
                            List<CommitteeVoting> list = ViewBag.CommiteeVotings;
                            if (ViewBag.CommiteeVotings.Count == 0 || !list.Contains(list.Where(x => x.LoanApplicationId == item.Id).FirstOrDefault()))
                            {
                                <a href="@Url.Action("History", new {id = item.Id})" title="History" class="btn btn-info btn-xs"><i class="fa fa-eye fa-lg"></i> History</a>
                                <a href="@Url.Action("ApproveCommittee", new {id = item.Id})" title="Approve" class="btn btn-primary btn-xs"><i class="fa fa-thumbs-up fa-lg"></i> Approve</a>
                                <a href="@Url.Action("RejectCommittee", new {id = item.Id})" title="Reject" class="btn btn-danger btn-xs"><i class="fa fa-thumbs-down fa-lg"></i> Reject</a>
                            }
                            else
                            {
                                CommitteeVoting cv = list.Where(x => x.LoanApplicationId == item.Id).FirstOrDefault();
                                if (cv != null)
                                {
                                    if (cv.Status == LoanApplicationCommitteeMemberStatus.Approved)
                                    {
                                        <div class="btn btn-primary btn-xs">Voted: Approved</div>
                                    }
                                    else if (cv.Status == LoanApplicationCommitteeMemberStatus.Rejected)
                                    {
                                        <div class="btn btn-danger btn-xs">Voted: Rejected</div>
                                    }
                                }
                            }
                        }
                        if (ViewBag.ActiveTab == "All")
                        {
                            List<CommitteeVoting> list = ViewBag.AllCommitteeVotings;
                            <a href="#" title="Approve" class="btn btn-primary btn-xs"><i class="fa fa-thumbs-up fa-lg"></i> @list.Where(x => x.LoanApplicationId == item.Id && x.Status == LoanApplicationCommitteeMemberStatus.Approved).Count().ToString()</a>
                            <a href="#" title="Reject" class="btn btn-danger btn-xs"><i class="fa fa-thumbs-down fa-lg"></i> @list.Where(x => x.LoanApplicationId == item.Id && x.Status == LoanApplicationCommitteeMemberStatus.Rejected).Count().ToString()</a>
                            <a href="@Url.Action("History", new {id = item.Id})" title="History" class="btn btn-info btn-xs"><i class="fa fa-eye fa-lg"></i> History</a>
                            <a href="@Url.Action("Approve", new {id = item.Id})" title="Approve" class="btn btn-primary btn-xs"><i class="fa fa-thumbs-up fa-lg"></i> Approve</a>
                            <a href="@Url.Action("Reject", new {id = item.Id})" title="Reject" class="btn btn-danger btn-xs"><i class="fa fa-thumbs-down fa-lg"></i> Reject</a>
                        }
                        break;
                    case LoanApplicationStatus.UnderRiskConsideration:
                        <a href="@Url.Action("History", new { id = item.Id })" title="History" class="btn btn-info btn-xs"><i class="fa fa-eye fa-lg"></i> History</a>
                        <a href="@Url.Action("SendToCommittee", new { id = item.Id })" title="to loan committуу" class="btn btn-default btn-xs"><i class="fa fa-users fa-lg"></i> To committee</a>
                        <a href="@Url.Action("Approve", new { id = item.Id })" title="Approve" class="btn btn-primary btn-xs"><i class="fa fa-check fa-lg"></i> Approve</a>
                        <a href="@Url.Action("Reject", new { id = item.Id })" title="Reject" class="btn btn-danger btn-xs"><i class="fa fa-times fa-lg"></i> Reject</a>
                        break;
                    case LoanApplicationStatus.Approved:
                        <a href="@Url.Action("Contract", new { id = item.Id })" title="Contract" class="btn btn-success btn-xs"><i class="fa fa-pencil fa-lg"></i> Sign contract</a>
                        break;
                    case LoanApplicationStatus.Rejected:
                    case LoanApplicationStatus.Annuled:
                        <a href="@Url.Action("Delete", new { id = item.Id })" title="Delete" class="btn btn-danger btn-xs"><i class="fa fa-trash-o fa-lg"></i></a>
                        break;
                    case LoanApplicationStatus.Contracted:
                        break;
                }
            </td>
        </tr>
    }
</table>
@Html.PagedListPager(Model, page => Url.Action(ViewBag.ActiveTab, new{page}),new PagedListRenderOptions(){Display = PagedListDisplayMode.IfNeeded})
