@model Domain.Models.Loans.LoanApplication

@{
    ViewBag.Title = "Fill";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Fill the application</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset class="form-horizontal">
        
        <div class="control-group">
            @Html.LabelFor(model => model.LoanAmount, new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.LoanAmount, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.LoanAmount, null, new { @class = "help-inline" })
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(model => model.Term, new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.Term, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Term, null, new { @class = "help-inline" })
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(model => model.CellPhone, new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.CellPhone, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CellPhone, null, new { @class = "help-inline" })
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(model => model.Tariff, "TariffId", new { @class = "control-label" })
            <div class="controls">
                @Html.DropDownList("TariffId", String.Empty)
                @Html.ValidationMessageFor(model => model.Tariff, null, new { @class = "help-inline" })
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(model => model.PersonalData, new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.PersonalData, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PersonalData, null, new { @class = "help-inline" })
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(model => model.Birthday, new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.Birthday, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Birthday, null, new { @class = "help-inline" })
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(model => model.MiddleIncome, new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.MiddleIncome, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MiddleIncome, null, new { @class = "help-inline" })
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(model => model.ChildrenCount, new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.ChildrenCount, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ChildrenCount, null, new { @class = "help-inline" })
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(model => model.HigherEducation, new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.HigherEducation, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.HigherEducation, null, new { @class = "help-inline" })
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(model => model.IsMarried, new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.IsMarried, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IsMarried, null, new { @class = "help-inline" })
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(model => model.LengthOfWork, new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.LengthOfWork, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.LengthOfWork, null, new { @class = "help-inline" })
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(model => model.IsHomeowner, new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.IsHomeowner, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IsHomeowner, null, new { @class = "help-inline" })
            </div>
        </div>

        <div class="control-group">
            <div class="controls">
                @Html.HiddenFor(model => model.LoanPurpose)
                @Html.ValidationMessageFor(model => model.LoanPurpose, null, new { @class = "help-inline" })
            </div>
        </div>

        <div class="control-group">
            <div class="controls">
                @Html.HiddenFor(model => model.Currency)
                @Html.ValidationMessageFor(model => model.Currency, null, new { @class = "help-inline" })
            </div>
        </div>
        
        <div class="control-group">
            <div class="controls">
                @Html.HiddenFor(model => model.TimeCreated)
                @Html.ValidationMessageFor(model => model.TimeCreated, null, new { @class = "help-inline" })
            </div>
        </div>

        <br />
        <div class="form-actions no-color">
            <input type="submit" value="Update" class="btn btn-success" />
        </div>
    </fieldset>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

