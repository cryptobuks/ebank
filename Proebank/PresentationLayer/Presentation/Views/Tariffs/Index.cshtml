@using Microsoft.Ajax.Utilities
@using PagedList
@using PagedList.Mvc
@model IPagedList<Domain.Models.Loans.Tariff>

@{
    ViewBag.Title = "Tariffs list";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var isDepartmentHead = User.Identity.IsAuthenticated && User.IsInRole("Department head");
    var isAnonymOrCustomerOrConsultant = !User.Identity.IsAuthenticated || User.IsInRole("Customer") || User.IsInRole("Consultant");
}

<h2>PROebank tariffs</h2>

@if (isDepartmentHead)
{
    <p>
        @Html.ActionLink("Create New", "Create")
    </p>
}
else
{
    <p><a class="btn btn-default" href="@Url.Action("Index", "LoanCalculator")">View calculator &raquo;</a></p>
}

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.First().Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().InterestRate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().MinAmount)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().MaxAmount)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().MinTerm)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().MaxTerm)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().IsGuarantorNeeded)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().LoanPurpose)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Currency)
        </th>
        @if (isDepartmentHead)
        {
            <th>
                @Html.DisplayNameFor(model => model.First().CreationDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().IsActive)
            </th>
            <th></th>
        }
        else if (isAnonymOrCustomerOrConsultant)
        {
            <th>Apply</th>
        }
        
    </tr>

    @foreach (var item in Model)
    {
        var isGuarantorNeeded = item.IsGuarantorNeeded ? "Yes" : "No";
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.InterestRate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MinAmount)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MaxAmount)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MinTerm)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MaxTerm)
            </td>
            <td>
                @isGuarantorNeeded
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LoanPurpose)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Currency)
            </td>
            @if (isDepartmentHead)
            {
                <td>
                    @Html.DisplayFor(modelItem => item.CreationDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsActive)
                </td>
                <td>
                    <a href="@Url.Action("Details", new {id = item.Id})" title="Details" class="btn btn-info btn-xs"><i class="fa fa-info-circle fa-lg"></i></a>
                    <a href="@Url.Action("Delete", new {id = item.Id})" title="Delete" class="btn btn-primary btn-xs"><i class="fa fa-trash-o fa-lg"></i></a>
                </td>
            }
            else if (isAnonymOrCustomerOrConsultant)
            {
                <td>
                    <a href="@Url.Action("Create", "LoanApplication", new {id = item.Id})" title="Apply for loan" class="btn btn-success btn-xs"><i class="fa fa-plus-circle fa-lg"></i></a>
                </td>
            }
        </tr>
    }
</table>
@Html.PagedListPager(Model, page => Url.Action(ViewBag.ActiveTab, new{page}),new PagedListRenderOptions(){Display = PagedListDisplayMode.IfNeeded})
