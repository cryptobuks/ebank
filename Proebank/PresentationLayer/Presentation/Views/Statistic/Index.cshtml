@model IEnumerable<Domain.Models.Loans.LoanApplication>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Index</h2>

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Tariff.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LoanAmount)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TimeCreated)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TimeContracted)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Term)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CellPhone)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LoanPurpose)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Status)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Currency)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.MiddleIncome)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ChildrenCount)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.HigherEducation)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.IsMarried)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LengthOfWork)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Birthday)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.IsHomeowner)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.IsRemoved)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Tariff.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.LoanAmount)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.TimeCreated)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.TimeContracted)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Term)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CellPhone)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.LoanPurpose)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Status)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Currency)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.MiddleIncome)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ChildrenCount)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.HigherEducation)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.IsMarried)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.LengthOfWork)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Birthday)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.IsHomeowner)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.IsRemoved)
        </td>
    </tr>
}

</table>

@{
    var listStatus = Model.Select(x => x.Status).GroupBy(y => y).ToList();
    string xStatus = listStatus.Select(x => x.Key.ToString()).Aggregate((x, y) => x + ", " + y);
    string yStatus = listStatus.Select(x => x.Count().ToString()).Aggregate((x, y) => x + ", " + y);
}

<canvas id="status" width="400" height="400"></canvas>
<script type="text/javascript">
    var ctx = document.getElementById("status").getContext("2d");
    var data = {
        labels: '@xStatus'.split(', '),
        datasets: [
            {
                fillColor: "rgba(220,220,220,0.5)",
                strokeColor: "rgba(120,120,120,1)",
                data: [@yStatus]
            }
        ]
    }
    var myNewChart = new Chart(ctx).Bar(data, { scaleOverride : true, scaleSteps : parseInt(@yStatus.Max().ToString()), scaleStepWidth : 1 });
</script>